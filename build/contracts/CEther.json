{
  "contractName": "CEther",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "comptroller_",
          "type": "address"
        },
        {
          "internalType": "contract InterestRateModel",
          "name": "interestRateModel_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialExchangeRateMantissa_",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "decimals_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestAccumulated",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "AccrueInterest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "error",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "info",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "detail",
          "type": "uint256"
        }
      ],
      "name": "Failure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "LiquidateBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintTokens",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "oldComptroller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "NewComptroller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "oldInterestRateModel",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "NewMarketInterestRateModel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldReserveFactorMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewReserveFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "RepayBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesReduced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        }
      ],
      "name": "_reduceReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "_setComptroller",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "_setInterestRateModel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setReserveFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "accrualBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "accrueInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "comptroller",
      "outputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "exchangeRateCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeRateStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialExchangeRateMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "interestRateModel",
      "outputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveFactorMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "seize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "supplyRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalBorrows",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "totalBorrowsCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "repayBorrow",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "repayBorrowBehalf",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "contract CToken",
          "name": "cTokenCollateral",
          "type": "address"
        }
      ],
      "name": "liquidateBorrow",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimals_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestAccumulated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"AccrueInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"error\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"detail\",\"type\":\"uint256\"}],\"name\":\"Failure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"LiquidateBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintTokens\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"oldComptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"NewComptroller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"oldInterestRateModel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"NewMarketInterestRateModel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldReserveFactorMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"NewReserveFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"RepayBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesReduced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"}],\"name\":\"_reduceReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"_setComptroller\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"_setInterestRateModel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"_setReserveFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accrualBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"borrowIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"borrowRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRateStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialExchangeRateMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"interestRateModel\",\"outputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isCToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract CToken\",\"name\":\"cTokenCollateral\",\"type\":\"address\"}],\"name\":\"liquidateBorrow\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"repayBorrow\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"repayBorrowBehalf\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"seize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBorrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"totalBorrowsCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Compound\",\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_reduceReserves(uint256)\":{\"params\":{\"reduceAmount\":\"Amount of reduction to reserves\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_setComptroller(address)\":{\"details\":\"Admin function to set a new comptroller\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_setInterestRateModel(address)\":{\"details\":\"Admin function to accrue interest and update the interest rate model\",\"params\":{\"newInterestRateModel\":\"the new interest rate model to use\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      * TODO: Should we add a second arg to verify, like a checksum of `newAdmin` address?\"},\"_setReserveFactor(uint256)\":{\"details\":\"Admin function to accrue interest and set a new reserve factor\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"accrueInterest()\":{\"details\":\"This calculates interest accrued from the last checkpointed block     up to the current block and writes new checkpoint to storage.\"},\"allowance(address,address)\":{\"params\":{\"owner\":\"The address of the account which owns the tokens to be spent\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"The number of tokens allowed to be spent (-1 means infinite)\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"amount\":\"The number of tokens that are approved (-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address of the account to query\"},\"return\":\"The number of tokens owned by `owner`\"},\"balanceOfUnderlying(address)\":{\"details\":\"This also accrues interest in a transaction\",\"params\":{\"owner\":\"The address of the account to query\"},\"return\":\"The amount of underlying owned by `owner`\"},\"borrow(uint256)\":{\"params\":{\"borrowAmount\":\"The amount of the underlying asset to borrow\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"borrowBalanceCurrent(address)\":{\"params\":{\"account\":\"The address whose balance should be calculated after updating borrowIndex\"},\"return\":\"The calculated balance\"},\"borrowBalanceStored(address)\":{\"params\":{\"account\":\"The address whose balance should be calculated\"},\"return\":\"The calculated balance\"},\"borrowRatePerBlock()\":{\"return\":\"The borrow interest rate per block, scaled by 1e18\"},\"constructor\":{\"params\":{\"comptroller_\":\"The address of the Comptroller\",\"decimals_\":\"ERC-20 decimal precision of this token\",\"initialExchangeRateMantissa_\":\"The initial exchange rate, scaled by 1e18\",\"interestRateModel_\":\"The address of the interest rate model\",\"name_\":\"ERC-20 name of this token\",\"symbol_\":\"ERC-20 symbol of this token\"}},\"exchangeRateCurrent()\":{\"return\":\"Calculated exchange rate scaled by 1e18\"},\"exchangeRateStored()\":{\"details\":\"This function does not accrue interest before calculating the exchange rate\",\"return\":\"Calculated exchange rate scaled by 1e18\"},\"getAccountSnapshot(address)\":{\"details\":\"This is used by comptroller to more efficiently perform liquidity checks.\",\"params\":{\"account\":\"Address of the account to snapshot\"},\"return\":\"(possible error, token balance, borrow balance, exchange rate mantissa)\"},\"getCash()\":{\"return\":\"The quantity of underlying asset owned by this contract\"},\"liquidateBorrow(address,address)\":{\"details\":\"Reverts upon any failure\",\"params\":{\"borrower\":\"The borrower of this cToken to be liquidated\",\"cTokenCollateral\":\"The market in which to seize collateral from the borrower\"}},\"mint()\":{\"details\":\"Reverts upon any failure\"},\"redeem(uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"redeemTokens\":\"The number of cTokens to redeem into underlying\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"redeemUnderlying(uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"redeemAmount\":\"The amount of underlying to redeem\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"repayBorrow()\":{\"details\":\"Reverts upon any failure\"},\"repayBorrowBehalf(address)\":{\"details\":\"Reverts upon any failure\",\"params\":{\"borrower\":\"the account with the debt being payed off\"}},\"seize(address,address,uint256)\":{\"details\":\"Will fail unless called by another cToken during the process of liquidation. Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.\",\"params\":{\"borrower\":\"The account having collateral seized\",\"liquidator\":\"The account receiving seized collateral\",\"seizeTokens\":\"The number of cTokens to seize\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"supplyRatePerBlock()\":{\"return\":\"The supply interest rate per block, scaled by 1e18\"},\"totalBorrowsCurrent()\":{\"return\":\"The total borrows with interest\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\",\"src\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"}},\"title\":\"Compound's CEther Contract\"},\"userdoc\":{\"methods\":{\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_reduceReserves(uint256)\":{\"notice\":\"Accrues interest and reduces reserves by transferring to admin\"},\"_setComptroller(address)\":{\"notice\":\"Sets a new comptroller for the market\"},\"_setInterestRateModel(address)\":{\"notice\":\"accrues interest and updates the interest rate model using _setInterestRateModelFresh\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setReserveFactor(uint256)\":{\"notice\":\"accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh\"},\"accrueInterest()\":{\"notice\":\"Applies accrued interest to total borrows and reserves.\"},\"allowance(address,address)\":{\"notice\":\"Get the current allowance from `owner` for `spender`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the token balance of the `owner`\"},\"balanceOfUnderlying(address)\":{\"notice\":\"Get the underlying balance of the `owner`\"},\"borrow(uint256)\":{\"notice\":\"Sender borrows assets from the protocol to their own address\"},\"borrowBalanceCurrent(address)\":{\"notice\":\"Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex\"},\"borrowBalanceStored(address)\":{\"notice\":\"Return the borrow balance of account based on stored data\"},\"borrowRatePerBlock()\":{\"notice\":\"Returns the current per-block borrow interest rate for this cToken\"},\"constructor\":\"Construct a new CEther money market\",\"exchangeRateCurrent()\":{\"notice\":\"Accrue interest then return the up-to-date exchange rate\"},\"exchangeRateStored()\":{\"notice\":\"Calculates the exchange rate from the underlying to the CToken\"},\"getAccountSnapshot(address)\":{\"notice\":\"Get a snapshot of the account's balances, and the cached exchange rate\"},\"getCash()\":{\"notice\":\"Get cash balance of this cToken in the underlying asset\"},\"liquidateBorrow(address,address)\":{\"notice\":\"The sender liquidates the borrowers collateral. The collateral seized is transferred to the liquidator.\"},\"mint()\":{\"notice\":\"Sender supplies assets into the market and receives cTokens in exchange\"},\"redeem(uint256)\":{\"notice\":\"Sender redeems cTokens in exchange for the underlying asset\"},\"redeemUnderlying(uint256)\":{\"notice\":\"Sender redeems cTokens in exchange for a specified amount of underlying asset\"},\"repayBorrow()\":{\"notice\":\"Sender repays their own borrow\"},\"repayBorrowBehalf(address)\":{\"notice\":\"Sender repays a borrow belonging to borrower\"},\"seize(address,address,uint256)\":{\"notice\":\"Transfers collateral tokens (this market) to the liquidator.\"},\"supplyRatePerBlock()\":{\"notice\":\"Returns the current per-block supply interest rate for this cToken\"},\"totalBorrowsCurrent()\":{\"notice\":\"Returns the current total borrows plus accrued interest\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}},\"notice\":\"CToken which wraps Ether\"}},\"settings\":{\"compilationTarget\":{\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/CEther.sol\":\"CEther\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/CEther.sol\":{\"keccak256\":\"0x35b8a52c6e589fc14931e9459e95a9899266636910f8ee4a5f677e2634f94e02\",\"urls\":[\"bzz-raw://d405908083f42591272a1786837ebf0cc2e69b6cdf74503be1485a14f8862a02\",\"dweb:/ipfs/QmTcAVgSZ1B2RfdEwsSxfEQ1KHDvYJTDHom52QSUce29z4\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/CToken.sol\":{\"keccak256\":\"0x84935f64a965eeb1343b2477b408baccab026bd1a43510acd083508bdb5bc296\",\"urls\":[\"bzz-raw://e370efcc40ba16ffffd516dbb2c44b56eec75a55174f0bf003882649bd70e2b5\",\"dweb:/ipfs/QmVJxSVYSnNrtba7LBCMtjemoesQJG8afiknhKjZVf8ZVz\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/CarefulMath.sol\":{\"keccak256\":\"0x3933fd91cc5e2a2a6816a7c68e9da8269fa90a00014f9fd6a6c0c11e7614933a\",\"urls\":[\"bzz-raw://253840b94680424b5a1e27e7faecaf62ee370dd528a89610c292d149100972dc\",\"dweb:/ipfs/QmbjUFxzd1mY5KzrZ6TK7LWt5WQE7zgVSMjEXMNyXz5coS\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/ComptrollerInterface.sol\":{\"keccak256\":\"0x88756833a8fc88fc53663d95cde129d8087845b2b97b39078f1af8b6153baaeb\",\"urls\":[\"bzz-raw://db46a9353da4ea6ea20fd8486b0871c2880608a506985455cd339d526cede5c8\",\"dweb:/ipfs/Qmb6UCUo4H4rvKBkHQSfz7hx56YSePEWBz36zSmKifehzN\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/EIP20Interface.sol\":{\"keccak256\":\"0x039754dd4b81b1aab3a173cd1f3ea3ab823c35476580cb6a2972c638d31cdc7d\",\"urls\":[\"bzz-raw://a52e345b5b168a72f3681278f98614da08bb7248d4cd45dc00bb974636334963\",\"dweb:/ipfs/QmRUiHZhT4LswwkJVNcNwbdu47xVynwBxs28i7y8MmqzHJ\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/EIP20NonStandardInterface.sol\":{\"keccak256\":\"0xad55fa5c72c01cfc7dca8061ebf9f2e275e80e653a66bc179a478ee6fc3bc3cd\",\"urls\":[\"bzz-raw://d607e68c8d775da8d32dbe0d5e90c4bbacd7ccb1615e24055c67a49446c531a1\",\"dweb:/ipfs/QmXiv3jPxuv3GQDwSHRVvk6ug5hz7BHCyj9RTZS8Tky3we\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/ErrorReporter.sol\":{\"keccak256\":\"0xee35124f750357154465965d1beb2f805addba8d2358e004e84219e8cfe30f4c\",\"urls\":[\"bzz-raw://eb816b5e90a9a3c350eae515b742f808561d27beb483dada5e76b0c7cf1be943\",\"dweb:/ipfs/QmW9XHa2ivi4vD3zQNnnLpVGdnSM3eY2hdqKqQSCqV6g5J\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/Exponential.sol\":{\"keccak256\":\"0x841f2470ddff866377c296972efebbe69b25122e29015946f4ff0e6ed36da371\",\"urls\":[\"bzz-raw://e6ae4a95c9d2166000069688fcf29c9ee7acafa2b58079e36fb11ebb2d9a86d4\",\"dweb:/ipfs/Qmd2sv93f1M54PYQrKFWNzRssG7KrPMt4t8qaaXYxKHTUy\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/InterestRateModel.sol\":{\"keccak256\":\"0xfc69c6832b996e3a283e394fd796672e7785203eb6d42b51acbc7f80a833f290\",\"urls\":[\"bzz-raw://f76e6b6431d28900facfe30370225ffe1bff5b85b052918f32af0bda61873816\",\"dweb:/ipfs/QmRo8gdAeTTFAB4qFo4ua7BeQD7EPEEuYqre9fZc4A1AF3\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/ReentrancyGuard.sol\":{\"keccak256\":\"0x1ae66e3770d5deed69cab4d55fa286754f25323209e19172d543632bf75c269b\",\"urls\":[\"bzz-raw://8c793358923bedfb15205220f5bef3355cefc153e06022463e469c2556d19d4c\",\"dweb:/ipfs/QmTtbtUwk5n9rtRXogz7SiUYi1c9vmSQfTLoVAEs2aUhWh\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "150:6121:53:-;;;624:371;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:371:53;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;624:371:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;624:371:53;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;624:371:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;624:371:53;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;624:371:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:12;916:18;936:28;966:5;973:7;982:9;576:1:67;560:13;:17;;;;6151:10:54;6143:5;;:18;;;;;;;;;;;;;;;;;;6239:28;6209:27;:58;;;;6315:1;6285:27;;:31;6277:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6411:8;6422:29;6438:12;6422:15;;;:29;;:::i;:::-;6411:40;;6481:14;6476:20;;;;;;;;6469:3;:27;6461:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6664:16;:14;;;:16;;:::i;:::-;6643:18;:37;;;;445:4:62;6690:11:54;:25;;;;6812:46;6839:18;6812:26;;;:46;;:::i;:::-;6806:52;;6888:14;6883:20;;;;;;;;6876:3;:27;6868:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6960:5;6953:4;:12;;;;;;;;;;;;:::i;:::-;;6984:7;6975:6;:16;;;;;;;;;;;;:::i;:::-;;7012:9;7001:8;:20;;;;5829:1199;;;;;;;624:371:53;;;;;;150:6121;;58147:718:54;58225:4;58292:5;;;;;;;;;;;58278:19;;:10;:19;;;58274:122;;58320:65;58325:18;58345:39;58320:4;;;:65;;:::i;:::-;58313:72;;;;58274:122;58406:35;58444:11;;;;;;;;;;;58406:49;;58539:14;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58539:30:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;58539:30:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;58539:30:54;;;;;;;;;;;;;;;;58531:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58681:14;58667:11;;:28;;;;;;;;;;;;;;;;;;58774:46;58789:14;58805;58774:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58843:14;58838:20;;;;;;;;58831:27;;;58147:718;;;;:::o;13832:91::-;13881:4;13904:12;13897:19;;13832:91;:::o;65425:1323::-;65519:4;65619:38;65719:5;;;;;;;;;;;65705:19;;:10;:19;;;65701:130;;65747:73;65752:18;65772:47;65747:4;;;:73;;:::i;:::-;65740:80;;;;;65701:130;65954:16;:14;;;:16;;:::i;:::-;65932:18;;:38;65928:205;;66045:77;66050:22;66074:47;66045:4;;;:77;;:::i;:::-;66038:84;;;;;65928:205;66224:17;;;;;;;;;;;66201:40;;66341:20;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66341:42:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;66341:42:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;66341:42:54;;;;;;;;;;;;;;;;66333:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66510:20;66490:17;;:40;;;;;;;;;;;;;;;;;;66633:70;66660:20;66682;66633:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66726:14;66721:20;;;;;;;;66714:27;;;65425:1323;;;;:::o;7061:149:61:-;7122:4;7143:33;7156:3;7151:9;;;;;;;;7167:4;7162:10;;;;;;;;7174:1;7143:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:3;7194:9;;;;;;;;7187:16;;7061:149;;;;:::o;150:6121:53:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "150:6121:53:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3817:54;3832:23;3845:9;3832:12;:23::i;:::-;3817:54;;;;;;;;;;;;;;;;;:14;:54::i;:::-;150:6121;648:18:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;648:18:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;648:18:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11106:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11106:232:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11106:232:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1171:104:53;;;:::i;:::-;;1873:33:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1873:33:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16688:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16688:221:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16688:221:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2484:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2484:26:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19466:257;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19466:257:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10453:193;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10453:193:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10453:193:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1319:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1319:35:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;834:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;834:20:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12342:314;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12342:314:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12342:314:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21257:86;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21257:86:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;58147:718;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58147:718:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;58147:718:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2258:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2258:24:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2685:125:53;;;:::i;:::-;;1440:39:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1440:39:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;61270:563;;8:9:-1;5:2;;;30:1;27;20:12;5:2;61270:563:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;61270:563:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1742:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1742:39:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1991:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1991:30:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11984:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11984:110:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11984:110:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16215:189;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16215:189:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2077:131:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2077:131:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2077:131:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2383:25:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2383:25:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;739:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;739:20:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;739:20:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17111:283;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17111:283:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17111:283:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21938:3580;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21938:3580:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9972:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9972:183:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9972:183:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2128:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2128:23:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3506:206:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3506:206:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14601:1474:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14601:1474:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;53693:2075;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53693:2075:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53693:2075:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;56305:631;;8:9:-1;5:2;;;30:1;27;20:12;5:2;56305:631:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;56305:631:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19028:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19028:195:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12994:685;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12994:685:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12994:685:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2469:111:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2469:111:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2469:111:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1618;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1618:111:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1618:111:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11660:141:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11660:141:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11660:141:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2994:169:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2994:169:53;;;;;;;;;;;;;;;;;;;:::i;:::-;;57207:722:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;57207:722:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;64478:625;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64478:625:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;64478:625:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1576:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1576:42:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1213:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1213:28:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14093:338;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14093:338:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;59161:599;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59161:599:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;59161:599:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;541:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;541:36:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;25868:528;25938:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;25954:10:54;25967:16;:14;:16::i;:::-;25954:29;;26011:14;26006:20;;;;;;;;25997:5;:29;25993:244;;26167:59;26178:5;26172:12;;;;;;;;26186:39;26167:4;:59::i;:::-;26160:66;;;;;25993:244;26356:33;26366:10;26378;26356:9;:33::i;:::-;26349:40;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25868:528:54;;;;:::o;5576:693:53:-;5681:14;5676:20;;;;;;;;5665:7;:31;5661:68;;;5712:7;;5661:68;5739:24;5800:1;5782:7;5776:21;:25;5766:36;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;5766:36:53;;;;5739:63;;5812:6;5838:1;5834:5;;5829:103;5851:7;5845:21;5841:1;:25;5829:103;;;5910:7;5919:1;5904:17;;;;;;;;;;;;;;;;5887:11;5899:1;5887:14;;;;;;;;;;;:34;;;;;;;;;;;5868:3;;;;;;;5829:103;;;5972:2;5961:15;;5942:11;5956:1;5954;:3;5942:16;;;;;;;;;;;:34;;;;;;;;;;;6016:2;6005:15;;5986:11;6000:1;5998;:3;5986:16;;;;;;;;;;;:34;;;;;;;;;;;6077:2;6067:7;:12;;;;;;6060:2;:21;6049:34;;6030:11;6044:1;6042;:3;6030:16;;;;;;;;;;;:53;;;;;;;;;;;6140:2;6130:7;:12;;;;;;6123:2;:21;6112:34;;6093:11;6107:1;6105;:3;6093:16;;;;;;;;;;;:53;;;;;;;;;;;6186:2;6175:15;;6156:11;6170:1;6168;:3;6156:16;;;;;;;;;;;:34;;;;;;;;;;;6225:14;6220:20;;;;;;;;6209:7;:31;6249:11;6201:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6201:61:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576:693;;;;;:::o;648:18:54:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11106:232::-;11174:4;11190:11;11204:10;11190:24;;11259:6;11224:18;:23;11243:3;11224:23;;;;;;;;;;;;;;;:32;11248:7;11224:32;;;;;;;;;;;;;;;:41;;;;11294:7;11280:30;;11289:3;11280:30;;;11303:6;11280:30;;;;;;;;;;;;;;;;;;11327:4;11320:11;;;11106:232;;;;:::o;1171:104:53:-;1214:54;1229:23;1242:9;1229:12;:23::i;:::-;1214:54;;;;;;;;;;;;;;;;;:14;:54::i;:::-;1171:104::o;1873:33:54:-;;;;:::o;16688:221::-;16766:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;16815:14:54;16810:20;;;;;;;;16790:16;:14;:16::i;:::-;:40;16782:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16874:28;16894:7;16874:19;:28::i;:::-;16867:35;;1102:13:67;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16688:221:54;;;;:::o;2484:26::-;;;;:::o;19466:257::-;19517:4;19534:13;19549:11;19564:28;:26;:28::i;:::-;19533:59;;;;19617:18;19610:25;;;;;;;;:3;:25;;;;;;;;;19602:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19710:6;19703:13;;;;19466:257;:::o;10453:193::-;10548:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;10624:14:54;10619:20;;;;;;;;10571:44;10586:10;10598:3;10603;10608:6;10571:14;:44::i;:::-;:68;10564:75;;1102:13:67;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10453:193:54;;;;;;:::o;1319:35::-;;;;;;;;;;;;;:::o;834:20::-;;;;:::o;12342:314::-;12404:4;12420:23;;:::i;:::-;12446:38;;;;;;;;12461:21;:19;:21::i;:::-;12446:38;;;12420:64;;12495:14;12511:12;12527:53;12545:12;12559:13;:20;12573:5;12559:20;;;;;;;;;;;;;;;;12527:17;:53::i;:::-;12494:86;;;;12606:18;12598:26;;;;;;;;:4;:26;;;;;;;;;12590:35;;;;;;12642:7;12635:14;;;;;12342:314;;;:::o;21257:86::-;21299:4;21322:14;:12;:14::i;:::-;21315:21;;21257:86;:::o;58147:718::-;58225:4;58292:5;;;;;;;;;;;58278:19;;:10;:19;;;58274:122;;58320:65;58325:18;58345:39;58320:4;:65::i;:::-;58313:72;;;;58274:122;58406:35;58444:11;;;;;;;;;;;58406:49;;58539:14;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58539:30:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;58539:30:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;58539:30:54;;;;;;;;;;;;;;;;58531:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58681:14;58667:11;;:28;;;;;;;;;;;;;;;;;;58774:46;58789:14;58805;58774:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58843:14;58838:20;;;;;;;;58831:27;;;58147:718;;;;:::o;2258:24::-;;;;:::o;2685:125:53:-;2735:68;2750:30;2770:9;2750:19;:30::i;:::-;2735:68;;;;;;;;;;;;;;;;;:14;:68::i;:::-;2685:125::o;1440:39:54:-;;;;;;;;;;;;;:::o;61270:563::-;61345:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;61361:10:54;61374:16;:14;:16::i;:::-;61361:29;;61418:14;61413:20;;;;;;;;61404:5;:29;61400:274;;61593:70;61604:5;61598:12;;;;;;;;61612:50;61593:4;:70::i;:::-;61586:77;;;;;61400:274;61792:34;61813:12;61792:20;:34::i;:::-;61785:41;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61270:563:54;;;;:::o;1742:39::-;;;;:::o;1991:30::-;;;;:::o;11984:110::-;12041:7;12067:13;:20;12081:5;12067:20;;;;;;;;;;;;;;;;12060:27;;11984:110;;;:::o;16215:189::-;16277:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;16326:14:54;16321:20;;;;;;;;16301:16;:14;:16::i;:::-;:40;16293:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16385:12;;16378:19;;1102:13:67;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16215:189:54;;:::o;2077:131:53:-;2140:4;2163:38;2188:12;2163:24;:38::i;:::-;2156:45;;2077:131;;;:::o;2383:25:54:-;;;;:::o;739:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;17111:283::-;17178:4;17195:13;17210:11;17225:36;17253:7;17225:27;:36::i;:::-;17194:67;;;;17286:18;17279:25;;;;;;;;:3;:25;;;;;;;;;17271:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;17374:13;;;;17111:283;;;:::o;21938:3580::-;21980:4;21996:35;;:::i;:::-;22143:17;;;;;;;;;;;:31;;;22175:14;:12;:14::i;:::-;22191:12;;22205:13;;22143:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22143:76:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22143:76:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22143:76:54;;;;;;;;;;;;;;;;;;;;;;;;;22100:4;:14;;22116:4;:23;;22099:120;;;;;;;;;;992:4;22237;:23;;;:48;;22229:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22350:1;22332:4;:14;;;:19;22328:176;;22374:119;22385:31;22418:58;22478:4;:14;;;22374:10;:119::i;:::-;22367:126;;;;;22328:176;22588:16;:14;:16::i;:::-;22562:4;:23;;:42;;;;;22725:52;22733:4;:23;;;22758:18;;22725:7;:52::i;:::-;22692:4;:12;;22706:4;:15;;22691:86;;;;;;;;;;;;;;;;;;;;;;;;;;22810:18;22794:34;;;;;;;;:4;:12;;;:34;;;;;;;;;22787:42;;;;23418:68;23428:40;;;;;;;;23443:4;:23;;;23428:40;;;23470:4;:15;;;23418:9;:68::i;:::-;23374:112;;;23375:4;:12;;23389:4;:25;;23374:112;;;;;;;;;;;;;;;;;;;;;;;;;23516:18;23500:34;;;;;;;;:4;:12;;;:34;;;;;;;;;23496:191;;23557:119;23568:16;23586:69;23662:4;:12;;;23657:18;;;;;;;;23557:10;:119::i;:::-;23550:126;;;;;23496:191;23740:58;23758:4;:25;;;23785:12;;23740:17;:58::i;:::-;23698:4;:12;;23712:4;:24;;23697:101;;;;;;;;;;;;;;;;;;;;;;;;;;23828:18;23812:34;;;;;;;;:4;:12;;;:34;;;;;;;;;23808:189;;23869:117;23880:16;23898:67;23972:4;:12;;;23967:18;;;;;;;;23869:10;:117::i;:::-;23862:124;;;;;23808:189;24046:47;24054:4;:24;;;24080:12;;24046:7;:47::i;:::-;24008:4;:12;;24022:4;:20;;24007:86;;;;;;;;;;;;;;;;;;;;;;;;;;24123:18;24107:34;;;;;;;;:4;:12;;;:34;;;;;;;;;24103:186;;24164:114;24175:16;24193:64;24264:4;:12;;;24259:18;;;;;;;;24164:10;:114::i;:::-;24157:121;;;;;24103:186;24339:105;24364:38;;;;;;;;24379:21;;24364:38;;;24404:4;:24;;;24430:13;;24339:24;:105::i;:::-;24300:4;:12;;24314:4;:21;;24299:145;;;;;;;;;;;;;;;;;;;;;;;;;;24474:18;24458:34;;;;;;;;:4;:12;;;:34;;;;;;;;;24454:187;;24515:115;24526:16;24544:65;24616:4;:12;;;24611:18;;;;;;;;24515:10;:115::i;:::-;24508:122;;;;;24454:187;24689:77;24714:4;:25;;;24741:11;;24754;;24689:24;:77::i;:::-;24652:4;:12;;24666:4;:19;;24651:115;;;;;;;;;;;;;;;;;;;;;;;;;;24796:18;24780:34;;;;;;;;:4;:12;;;:34;;;;;;;;;24776:185;;24837:113;24848:16;24866:63;24936:4;:12;;;24931:18;;;;;;;;24837:10;:113::i;:::-;24830:120;;;;;24776:185;25178:4;:23;;;25157:18;:44;;;;25225:4;:19;;;25211:11;:33;;;;25269:4;:20;;;25254:12;:35;;;;25315:4;:21;;;25299:13;:37;;;;25398:75;25413:4;:24;;;25439:4;:19;;;25460:12;;25398:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25496:14;25491:20;;;;;;;;25484:27;;;21938:3580;;:::o;9972:183::-;10050:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;10133:14:54;10128:20;;;;;;;;10073:51;10088:10;10100;10112:3;10117:6;10073:14;:51::i;:::-;:75;10066:82;;1102:13:67;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9972:183:54;;;;;:::o;2128:23::-;;;;:::o;3506:206:53:-;3601:104;3616:62;3640:8;3650:9;3661:16;3616:23;:62::i;:::-;3601:104;;;;;;;;;;;;;;;;;:14;:104::i;:::-;3506:206;;:::o;14601:1474:54:-;14654:4;14899:25;14927:20;:18;:20::i;:::-;14899:48;;14959:7;14968:23;14995:17;;;;;;;;;;;:31;;;15027:14;:12;:14::i;:::-;15043:12;;15057:13;;14995:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14995:76:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14995:76:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14995:76:54;;;;;;;;;;;;;;;;;;;;;;;;;14958:113;;;;15095:1;15089:2;:7;15081:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15177:12;15191:21;;:::i;:::-;15216:61;15226:37;;;;;;;;15241:20;15226:37;;;15265:11;;15216:9;:61::i;:::-;15176:101;;;;15301:18;15295:24;;;;;;;;:2;:24;;;;;;;;;15287:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15385:12;15399:21;;:::i;:::-;15424:40;15439:12;;15453:10;15424:14;:40::i;:::-;15384:80;;;;15488:18;15482:24;;;;;;;;:2;:24;;;;;;;;;15474:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15572:12;15586:32;;:::i;:::-;15622:76;15629:28;;;;;;;;445:4:62;15629:28:54;;;15659:38;;;;;;;;15674:21;;15659:38;;;15622:6;:76::i;:::-;15571:127;;;;15722:18;15716:24;;;;;;;;:2;:24;;;;;;;;;15708:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15817:12;15831:21;;:::i;:::-;15856:79;15864:35;;;;;;;;15879:18;15864:35;;;15901:21;15924:10;15856:7;:79::i;:::-;15816:119;;;;15959:18;15953:24;;;;;;;;:2;:24;;;;;;;;;15945:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16049:10;:19;;;16042:26;;;;;;;;;;;;;14601:1474;:::o;53693:2075::-;53795:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;53851:12:54;53866:11;;;;;;;;;;;:24;;;53899:4;53906:10;53918;53930:8;53940:11;53866:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53866:86:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53866:86:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53866:86:54;;;;;;;;;;;;;;;;53851:101;;53977:1;53966:7;:12;53962:149;;54001:99;54012:27;54041:49;54092:7;54001:10;:99::i;:::-;53994:106;;;;;53962:149;54181:10;54169:22;;:8;:22;;;54165:144;;;54214:84;54219:26;54247:50;54214:4;:84::i;:::-;54207:91;;;;;54165:144;54319:17;54346:22;54378:24;54714:45;54722:13;:23;54736:8;54722:23;;;;;;;;;;;;;;;;54747:11;54714:7;:45::i;:::-;54683:76;;;;;;;;54784:18;54773:29;;;;;;;;:7;:29;;;;;;;;;54769:164;;54825:97;54836:16;54854:52;54913:7;54908:13;;;;;;;;54825:10;:97::i;:::-;54818:104;;;;;;;;54769:164;54976:47;54984:13;:25;54998:10;54984:25;;;;;;;;;;;;;;;;55011:11;54976:7;:47::i;:::-;54943:80;;;;;;;;55048:18;55037:29;;;;;;;;:7;:29;;;;;;;;;55033:164;;55089:97;55100:16;55118:52;55177:7;55172:13;;;;;;;;55089:10;:97::i;:::-;55082:104;;;;;;;;55033:164;55419:17;55393:13;:23;55407:8;55393:23;;;;;;;;;;;;;;;:43;;;;55474:19;55446:13;:25;55460:10;55446:25;;;;;;;;;;;;;;;:47;;;;55564:10;55545:43;;55554:8;55545:43;;;55576:11;55545:43;;;;;;;;;;;;;;;;;;55638:11;;;;;;;;;;;:23;;;55670:4;55677:10;55689;55701:8;55711:11;55638:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55638:85:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;55638:85:54;;;;55746:14;55741:20;;;;;;;;55734:27;;;;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53693:2075:54;;;;;;:::o;56305:631::-;56382:4;56448:5;;;;;;;;;;;56434:19;;:10;:19;;;56430:124;;56476:67;56481:18;56501:41;56476:4;:67::i;:::-;56469:74;;;;56430:124;56624:23;56650:12;;;;;;;;;;;56624:38;;56745:15;56730:12;;:30;;;;;;;;;;;;;;;;;;56842:49;56858:15;56875;56842:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56914:14;56909:20;;;;;;;;56902:27;;;56305:631;;;;:::o;19028:195::-;19088:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;19137:14:54;19132:20;;;;;;;;19112:16;:14;:16::i;:::-;:40;19104:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19196:20;:18;:20::i;:::-;19189:27;;1102:13:67;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19028:195:54;;:::o;12994:685::-;13062:4;13068;13074;13080;13096:18;13117:13;:22;13131:7;13117:22;;;;;;;;;;;;;;;;13096:43;;13149:18;13177:25;13213:14;13262:36;13290:7;13262:27;:36::i;:::-;13238:60;;;;;;;;13320:18;13312:26;;;;;;;;:4;:26;;;;;;;;;13308:97;;13367:16;13362:22;;;;;;;;13386:1;13389;13392;13354:40;;;;;;;;;;;;;;;;;;;;;;;13308:97;13446:28;:26;:28::i;:::-;13415:59;;;;;;;;13496:18;13488:26;;;;;;;;:4;:26;;;;;;;;;13484:97;;13543:16;13538:22;;;;;;;;13562:1;13565;13568;13530:40;;;;;;;;;;;;;;;;;;;;;;;13484:97;13604:14;13599:20;;;;;;;;13621:13;13636;13651:20;13591:81;;;;;;;;;;;;12994:685;;;;;;:::o;2469:111:53:-;2522:4;2545:28;2560:12;2545:14;:28::i;:::-;2538:35;;2469:111;;;:::o;1618:::-;1671:4;1694:28;1709:12;1694:14;:28::i;:::-;1687:35;;1618:111;;;:::o;11660:141:54:-;11734:7;11760:18;:25;11779:5;11760:25;;;;;;;;;;;;;;;:34;11786:7;11760:34;;;;;;;;;;;;;;;;11753:41;;11660:141;;;;:::o;2994:169:53:-;3066:90;3081:46;3107:8;3117:9;3081:25;:46::i;:::-;3066:90;;;;;;;;;;;;;;;;;:14;:90::i;:::-;2994:169;:::o;57207:722:54:-;57249:4;57355:12;;;;;;;;;;;57341:26;;:10;:26;;;;:54;;;;57393:1;57371:24;;:10;:24;;;57341:54;57337:162;;;57418:70;57423:18;57443:44;57418:4;:70::i;:::-;57411:77;;;;57337:162;57561:16;57580:5;;;;;;;;;;;57561:24;;57595:23;57621:12;;;;;;;;;;;57595:38;;57699:12;;;;;;;;;;;57691:5;;:20;;;;;;;;;;;;;;;;;;57780:1;57757:12;;:25;;;;;;;;;;;;;;;;;;57798;57807:8;57817:5;;;;;;;;;;;57798:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57838:46;57854:15;57871:12;;;;;;;;;;;57838:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57907:14;57902:20;;;;;;;;57895:27;;;;57207:722;;:::o;64478:625::-;64565:4;64581:10;64594:16;:14;:16::i;:::-;64581:29;;64638:14;64633:20;;;;;;;;64624:5;:29;64620:295;;64826:78;64837:5;64831:12;;;;;;;;64845:58;64826:4;:78::i;:::-;64819:85;;;;;64620:295;65048:48;65075:20;65048:26;:48::i;:::-;65041:55;;;64478:625;;;;:::o;1576:42::-;;;;;;;;;;;;;:::o;1213:28::-;;;;;;;;;;;;;:::o;14093:338::-;14146:4;14163:14;14179:23;14206:17;;;;;;;;;;;:31;;;14238:14;:12;:14::i;:::-;14254:12;;14268:13;;14206:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14206:76:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14206:76:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14206:76:54;;;;;;;;;;;;;;;;;;;;;;;;;14162:120;;;;14313:1;14300:9;:14;14292:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14406:18;14399:25;;;;14093:338;:::o;59161:599::-;59250:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;59266:10:54;59279:16;:14;:16::i;:::-;59266:29;;59323:14;59318:20;;;;;;;;59309:5;:29;59305:283;;59504:73;59515:5;59509:12;;;;;;;;59523:53;59504:4;:73::i;:::-;59497:80;;;;;59305:283;59705:48;59728:24;59705:22;:48::i;:::-;59698:55;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59161:599:54;;;;:::o;541:36::-;573:4;541:36;:::o;7061:149:61:-;7122:4;7143:33;7156:3;7151:9;;;;;;;;7167:4;7162:10;;;;;;;;7174:1;7143:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:3;7194:9;;;;;;;;7187:16;;7061:149;;;;:::o;27016:3562:54:-;27086:4;27141:12;27156:11;;;;;;;;;;;:23;;;27188:4;27195:6;27203:10;27156:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27156:58:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27156:58:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;27156:58:54;;;;;;;;;;;;;;;;27141:73;;27239:1;27228:7;:12;27224:138;;27263:88;27274:27;27303:38;27343:7;27263:10;:88::i;:::-;27256:95;;;;;27224:138;27469:16;:14;:16::i;:::-;27447:18;;:38;27443:138;;27508:62;27513:22;27537:32;27508:4;:62::i;:::-;27501:69;;;;;27443:138;27591:25;;:::i;:::-;27682:35;27698:6;27706:10;27682:15;:35::i;:::-;27671:4;:8;;:46;;;;;;;;;;;;;;;;;;;;;;;27743:14;27731:26;;;;;;;;:4;:8;;;:26;;;;;;;;;27727:121;;27780:57;27785:4;:8;;;27795:41;27780:4;:57::i;:::-;27773:64;;;;;;27727:121;28070:28;:26;:28::i;:::-;28027:4;:12;;28041:4;:25;;28026:72;;;;;;;;;;;;;;;;;;;;;;;;;;28128:18;28112:34;;;;;;;;:4;:12;;;:34;;;;;;;;;28108:164;;28169:92;28180:16;28198:42;28247:4;:12;;;28242:18;;;;;;;;28169:10;:92::i;:::-;28162:99;;;;;;28108:164;28316:78;28339:10;28351:42;;;;;;;;28366:4;:25;;;28351:42;;;28316:22;:78::i;:::-;28283:4;:12;;28297:4;:15;;28282:112;;;;;;;;;;;;;;;;;;;;;;;;;;28424:18;28408:34;;;;;;;;:4;:12;;;:34;;;;;;;;;28404:166;;28465:94;28476:16;28494:44;28545:4;:12;;;28540:18;;;;;;;;28465:10;:94::i;:::-;28458:101;;;;;;28404:166;28866:37;28874:11;;28887:4;:15;;;28866:7;:37::i;:::-;28829:4;:12;;28843:4;:19;;28828:75;;;;;;;;;;;;;;;;;;;;;;;;;;28933:18;28917:34;;;;;;;;:4;:12;;;:34;;;;;;;;;28913:174;;28974:102;28985:16;29003:52;29062:4;:12;;;29057:18;;;;;;;;28974:10;:102::i;:::-;28967:109;;;;;;28913:174;29137:47;29145:13;:21;29159:6;29145:21;;;;;;;;;;;;;;;;29168:4;:15;;;29137:7;:47::i;:::-;29098:4;:12;;29112:4;:21;;29097:87;;;;;;;;;;;;;;;;;;;;;;;;;;29214:18;29198:34;;;;;;;;:4;:12;;;:34;;;;;;;;;29194:177;;29255:105;29266:16;29284:55;29346:4;:12;;;29341:18;;;;;;;;29255:10;:105::i;:::-;29248:112;;;;;;29194:177;29912:32;29925:6;29933:10;29912:12;:32::i;:::-;29901:4;:8;;:43;;;;;;;;;;;;;;;;;;;;;;;29970:14;29958:26;;;;;;;;:4;:8;;;:26;;;;;;;;;29954:115;;30007:51;30012:4;:8;;;30022:35;30007:4;:51::i;:::-;30000:58;;;;;;29954:115;30158:4;:19;;;30144:11;:33;;;;30211:4;:21;;;30187:13;:21;30201:6;30187:21;;;;;;;;;;;;;;;:45;;;;30305:41;30310:6;30318:10;30330:4;:15;;;30305:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30385:6;30361:48;;30378:4;30361:48;;;30393:4;:15;;;30361:48;;;;;;;;;;;;;;;;;;30459:11;;;;;;;;;;;:22;;;30490:4;30497:6;30505:10;30517:4;:15;;;30459:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30459:74:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30459:74:54;;;;30556:14;30551:20;;;;;;;;30544:27;;;;27016:3562;;;;;:::o;19980:1113::-;20041:9;20052:4;20087:1;20072:11;;:16;20068:1019;;;20240:18;20260:27;;20232:56;;;;;;20068:1019;20464:14;20481;:12;:14::i;:::-;20464:31;;20509:33;20556:23;;:::i;:::-;20593:17;20667:54;20682:9;20693:12;;20707:13;;20667:14;:54::i;:::-;20625:96;;;;;;;;20750:18;20739:29;;;;;;;;:7;:29;;;;;;;;;20735:87;;20796:7;20805:1;20788:19;;;;;;;;;;;;;20735:87;20862:49;20869:28;20899:11;;20862:6;:49::i;:::-;20836:75;;;;;;;;20940:18;20929:29;;;;;;;;:7;:29;;;;;;;;;20925:87;;20986:7;20995:1;20978:19;;;;;;;;;;;;;20925:87;21034:18;21054:12;:21;;;21026:50;;;;;;;;19980:1113;;;:::o;7480:2239::-;7578:4;7637:12;7652:11;;;;;;;;;;;:27;;;7688:4;7695:3;7700;7705:6;7652:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7652:60:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7652:60:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7652:60:54;;;;;;;;;;;;;;;;7637:75;;7737:1;7726:7;:12;7722:142;;7761:92;7772:27;7801:42;7845:7;7761:10;:92::i;:::-;7754:99;;;;;7722:142;7927:3;7920:10;;:3;:10;;;7916:103;;;7953:55;7958:15;7975:32;7953:4;:55::i;:::-;7946:62;;;;;7916:103;8093:22;8118:1;8093:26;;8144:3;8133:14;;:7;:14;;;8129:156;;;8188:2;8163:28;;8129:156;;;8242:18;:23;8261:3;8242:23;;;;;;;;;;;;;;;:32;8266:7;8242:32;;;;;;;;;;;;;;;;8222:52;;8129:156;8360:17;8387;8414;8441;8495:34;8503:17;8522:6;8495:7;:34::i;:::-;8469:60;;;;;;;;8554:18;8543:29;;;;;;;;:7;:29;;;;;;;;;8539:123;;8595:56;8600:16;8618:32;8595:4;:56::i;:::-;8588:63;;;;;;;;;;8539:123;8698:35;8706:13;:18;8720:3;8706:18;;;;;;;;;;;;;;;;8726:6;8698:7;:35::i;:::-;8672:61;;;;;;;;8758:18;8747:29;;;;;;;;:7;:29;;;;;;;;;8743:122;;8799:55;8804:16;8822:31;8799:4;:55::i;:::-;8792:62;;;;;;;;;;8743:122;8901:35;8909:13;:18;8923:3;8909:18;;;;;;;;;;;;;;;;8929:6;8901:7;:35::i;:::-;8875:61;;;;;;;;8961:18;8950:29;;;;;;;;:7;:29;;;;;;;;;8946:120;;9002:53;9007:16;9025:29;9002:4;:53::i;:::-;8995:60;;;;;;;;;;8946:120;9214:12;9193:13;:18;9207:3;9193:18;;;;;;;;;;;;;;;:33;;;;9257:12;9236:13;:18;9250:3;9236:18;;;;;;;;;;;;;;;:33;;;;9365:2;9339:17;:29;9335:107;;9419:12;9384:18;:23;9403:3;9384:23;;;;;;;;;;;;;;;:32;9408:7;9384:32;;;;;;;;;;;;;;;:47;;;;9335:107;9510:3;9496:26;;9505:3;9496:26;;;9515:6;9496:26;;;;;;;;;;;;;;;;;;9615:11;;;;;;;;;;;:26;;;9650:4;9657:3;9662;9667:6;9615:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9615:59:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9615:59:54;;;;9697:14;9692:20;;;;;;;;9685:27;;;;;;;;7480:2239;;;;;;;:::o;2446:306:62:-;2523:9;2534:4;2551:13;2566:18;;:::i;:::-;2588:20;2598:1;2601:6;2588:9;:20::i;:::-;2550:58;;;;2629:18;2622:25;;;;;;;;:3;:25;;;;;;;;;2618:71;;2671:3;2676:1;2663:15;;;;;;;;;;;2618:71;2707:18;2727:17;2736:7;2727:8;:17::i;:::-;2699:46;;;;;;2446:306;;;;;;:::o;4137:227:53:-;4184:4;4201:13;4216:20;4240:41;4248:21;4271:9;4240:7;:41::i;:::-;4200:81;;;;4306:18;4299:25;;;;;;;;:3;:25;;;;;;;;;4291:34;;;;;;4342:15;4335:22;;;;4137:227;:::o;42309:553:54:-;42387:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;42403:10:54;42416:16;:14;:16::i;:::-;42403:29;;42460:14;42455:20;;;;;;;;42446:5;:29;42442:252;;42616:67;42627:5;42621:12;;;;;;;;42635:47;42616:4;:67::i;:::-;42609:74;;;;;42442:252;42802:53;42819:10;42831;42843:11;42802:16;:53::i;:::-;42795:60;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42309:553:54;;;;:::o;62102:2015::-;62169:4;62185:9;62244:21;62327:5;;;;;;;;;;;62313:19;;:10;:19;;;62309:122;;62355:65;62360:18;62380:39;62355:4;:65::i;:::-;62348:72;;;;;;62309:122;62554:16;:14;:16::i;:::-;62532:18;;:38;62528:197;;62645:69;62650:22;62674:39;62645:4;:69::i;:::-;62638:76;;;;;;62528:197;62828:12;62811:14;:12;:14::i;:::-;:29;62807:150;;;62863:83;62868:29;62899:46;62863:4;:83::i;:::-;62856:90;;;;;;62807:150;63202:13;;63187:12;:28;63183:127;;;63238:61;63243:15;63260:38;63238:4;:61::i;:::-;63231:68;;;;;;63183:127;63472:12;63456:13;;:28;63437:47;;63610:13;;63590:16;:33;;63582:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63751:16;63735:13;:32;;;;63837:34;63851:5;;;;;;;;;;;63858:12;63837:13;:34::i;:::-;63831:40;;63948:14;63941:21;;;;;;;;:3;:21;;;;;;;;;63933:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64018:54;64034:5;;;;;;;;;;;64041:12;64055:16;64018:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64095:14;64090:20;;;;;;;;64083:27;;;;62102:2015;;;;:::o;31788:529::-;31872:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;31888:10:54;31901:16;:14;:16::i;:::-;31888:29;;31945:14;31940:20;;;;;;;;31931:5;:29;31927:246;;32101:61;32112:5;32106:12;;;;;;;;32120:41;32101:4;:61::i;:::-;32094:68;;;;;31927:246;32270:40;32282:10;32294:1;32297:12;32270:11;:40::i;:::-;32263:47;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31788:529:54;;;;:::o;17641:1238::-;17718:9;17729:4;17812:17;17839:24;17873:11;17943:37;17983:14;:23;17998:7;17983:23;;;;;;;;;;;;;;;17943:63;;18235:1;18207:14;:24;;;:29;18203:90;;;18260:18;18280:1;18252:30;;;;;;;;;;;;;18203:90;18515:46;18523:14;:24;;;18549:11;;18515:7;:46::i;:::-;18482:79;;;;;;;;18586:18;18575:29;;;;;;;;:7;:29;;;;;;;;;18571:79;;18628:7;18637:1;18620:19;;;;;;;;;;;;;18571:79;18680:58;18688:19;18709:14;:28;;;18680:7;:58::i;:::-;18660:78;;;;;;;;18763:18;18752:29;;;;;;;;:7;:29;;;;;;;;;18748:79;;18805:7;18814:1;18797:19;;;;;;;;;;;;;18748:79;18845:18;18865:6;18837:35;;;;;;;;17641:1238;;;;:::o;7328:183:61:-;7413:4;7434:43;7447:3;7442:9;;;;;;;;7458:4;7453:10;;;;;;;;7465:11;7434:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7500:3;7495:9;;;;;;;;7488:16;;7328:183;;;;;:::o;13832:91:54:-;13881:4;13904:12;13897:19;;13832:91;:::o;1302:230:55:-;1358:9;1369:4;1394:1;1389;:6;1385:141;;1419:18;1443:1;1439;:5;1411:34;;;;;;1385:141;1484:27;1513:1;1476:39;;;;;;;1302:230;;;;;;:::o;1992:346:62:-;2061:9;2072:10;;:::i;:::-;2095:14;2111:19;2134:27;2142:1;:10;;;2154:6;2134:7;:27::i;:::-;2094:67;;;;2183:18;2175:26;;;;;;;;:4;:26;;;;;;;;;2171:90;;2225:4;2231:18;;;;;;;;2246:1;2231:18;;;2217:33;;;;;;;;;;;2171:90;2279:18;2299:31;;;;;;;;2314:14;2299:31;;;2271:60;;;;;;;;;1992:346;;;;;;:::o;1612:250:55:-;1668:9;1679:4;1695:6;1708:1;1704;:5;1695:14;;1729:1;1724;:6;1720:136;;1754:18;1774:1;1746:30;;;;;;;1720:136;1815:26;1843:1;1807:38;;;;;;;;1612:250;;;;;;:::o;2892:321:62:-;2989:9;3000:4;3017:13;3032:18;;:::i;:::-;3054:20;3064:1;3067:6;3054:9;:20::i;:::-;3016:58;;;;3095:18;3088:25;;;;;;;;:3;:25;;;;;;;;;3084:71;;3137:3;3142:1;3129:15;;;;;;;;;;;3084:71;3172:34;3180:17;3189:7;3180:8;:17::i;:::-;3199:6;3172:7;:34::i;:::-;3165:41;;;;;;2892:321;;;;;;;:::o;48510:954:54:-;48635:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;48651:10:54;48664:16;:14;:16::i;:::-;48651:29;;48708:14;48703:20;;;;;;;;48694:5;:29;48690:261;;48869:71;48880:5;48874:12;;;;;;;;48888:51;48869:4;:71::i;:::-;48862:78;;;;;48690:261;48969:16;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48969:33:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48969:33:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48969:33:54;;;;;;;;;;;;;;;;48961:41;;49030:14;49025:20;;;;;;;;49016:5;:29;49012:265;;49191:75;49202:5;49196:12;;;;;;;;49210:55;49191:4;:75::i;:::-;49184:82;;;;;49012:265;49384:73;49405:10;49417:8;49427:11;49440:16;49384:20;:73::i;:::-;49377:80;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48510:954:54;;;;;;:::o;3727:605:62:-;3807:9;3818:10;;:::i;:::-;4115:14;4131;4149:25;445:4;4167:6;4149:7;:25::i;:::-;4114:60;;;;4196:18;4188:26;;;;;;;;:4;:26;;;;;;;;;4184:90;;4238:4;4244:18;;;;;;;;4259:1;4244:18;;;4230:33;;;;;;;;;;;4184:90;4290:35;4297:9;4308:7;:16;;;4290:6;:35::i;:::-;4283:42;;;;;;3727:605;;;;;;:::o;1687:221::-;1754:9;1765:10;;:::i;:::-;1788:15;1805:11;1820:31;1828:1;:10;;;1840:1;:10;;;1820:7;:31::i;:::-;1787:64;;;;1870:5;1877:23;;;;;;;;1892:6;1877:23;;;1862:39;;;;;;;;;1687:221;;;;;:::o;6332:278::-;6414:9;6425:10;;:::i;:::-;6448:13;6463;;:::i;:::-;6480:12;6487:1;6490;6480:6;:12::i;:::-;6447:45;;;;6513:18;6506:25;;;;;;;;:3;:25;;;;;;;;;6502:72;;6555:3;6560:2;6547:16;;;;;;;;6502:72;6590:13;6597:2;6601:1;6590:6;:13::i;:::-;6583:20;;;;;;6332:278;;;;;;;:::o;38057:516:54:-;38131:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;38147:10:54;38160:16;:14;:16::i;:::-;38147:29;;38204:14;38199:20;;;;;;;;38190:5;:29;38186:246;;38360:61;38371:5;38365:12;;;;;;;;38379:41;38360:4;:61::i;:::-;38353:68;;;;;38186:246;38529:37;38541:10;38553:12;38529:11;:37::i;:::-;38522:44;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38057:516:54;;;;:::o;30921:519::-;30995:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;31011:10:54;31024:16;:14;:16::i;:::-;31011:29;;31068:14;31063:20;;;;;;;;31054:5;:29;31050:246;;31224:61;31235:5;31229:12;;;;;;;;31243:41;31224:4;:61::i;:::-;31217:68;;;;;31050:246;31393:40;31405:10;31417:12;31431:1;31393:11;:40::i;:::-;31386:47;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30921:519:54;;;;:::o;43142:575::-;43244:4;1010:1:67;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;43260:10:54;43273:16;:14;:16::i;:::-;43260:29;;43317:14;43312:20;;;;;;;;43303:5;:29;43299:252;;43473:67;43484:5;43478:12;;;;;;;;43492:47;43473:4;:67::i;:::-;43466:74;;;;;43299:252;43659:51;43676:10;43688:8;43698:11;43659:16;:51::i;:::-;43652:58;;;1067:1:67;1102:13;;1086:12;:29;1078:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43142:575:54;;;;;:::o;65425:1323::-;65519:4;65619:38;65719:5;;;;;;;;;;;65705:19;;:10;:19;;;65701:130;;65747:73;65752:18;65772:47;65747:4;:73::i;:::-;65740:80;;;;;65701:130;65954:16;:14;:16::i;:::-;65932:18;;:38;65928:205;;66045:77;66050:22;66074:47;66045:4;:77::i;:::-;66038:84;;;;;65928:205;66224:17;;;;;;;;;;;66201:40;;66341:20;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66341:42:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;66341:42:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;66341:42:54;;;;;;;;;;;;;;;;66333:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66510:20;66490:17;;:40;;;;;;;;;;;;;;;;;;66633:70;66660:20;66682;66633:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66726:14;66721:20;;;;;;;;66714:27;;;65425:1323;;;;:::o;60021:1003::-;60102:4;60169:5;;;;;;;;;;;60155:19;;:10;:19;;;60151:125;;60197:68;60202:18;60222:42;60197:4;:68::i;:::-;60190:75;;;;60151:125;60380:16;:14;:16::i;:::-;60358:18;;:38;60354:200;;60471:72;60476:22;60500:42;60471:4;:72::i;:::-;60464:79;;;;60354:200;1139:4;60623:24;:51;60619:155;;;60697:66;60702:15;60719:43;60697:4;:66::i;:::-;60690:73;;;;60619:155;60784:29;60816:21;;60784:53;;60871:24;60847:21;:48;;;;60911:68;60928:24;60954;60911:68;;;;;;;;;;;;;;;;;;;;;;;;61002:14;60997:20;;;;;;;;60990:27;;;60021:1003;;;;:::o;4639:257:53:-;4714:5;4778:4;4764:18;;:10;:18;;;4756:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4833:6;4820:9;:19;4812:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4875:14;4868:21;;4639:257;;;;:::o;4438:330:62:-;4526:9;4537:4;4554:13;4569:19;;:::i;:::-;4592:31;4607:6;4615:7;4592:14;:31::i;:::-;4553:70;;;;4644:18;4637:25;;;;;;;;:3;:25;;;;;;;;;4633:71;;4686:3;4691:1;4678:15;;;;;;;;;;;4633:71;4722:18;4742;4751:8;4742;:18::i;:::-;4714:47;;;;;;4438:330;;;;;;:::o;5098:249:53:-;5165:5;5229:4;5215:18;;:10;:18;;;5207:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:6;5271:9;:19;5263:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5326:14;5319:21;;5098:249;;;;:::o;1926:263:55:-;1997:9;2008:4;2025:14;2041:8;2053:13;2061:1;2064;2053:7;:13::i;:::-;2024:42;;;;2089:18;2081:26;;;;;;;;:4;:26;;;;;;;;;2077:73;;2131:4;2137:1;2123:16;;;;;;;;;;;2077:73;2167:15;2175:3;2180:1;2167:7;:15::i;:::-;2160:22;;;;;;1926:263;;;;;;;:::o;786:503:62:-;847:9;858:10;;:::i;:::-;881:14;897:20;921:22;929:3;445:4;921:7;:22::i;:::-;880:63;;;;965:18;957:26;;;;;;;;:4;:26;;;;;;;;;953:90;;1007:4;1013:18;;;;;;;;1028:1;1013:18;;;999:33;;;;;;;;;;;953:90;1054:14;1070:13;1087:31;1095:15;1112:5;1087:7;:31::i;:::-;1053:65;;;;1140:18;1132:26;;;;;;;;:4;:26;;;;;;;;;1128:90;;1182:4;1188:18;;;;;;;;1203:1;1188:18;;;1174:33;;;;;;;;;;;;;1128:90;1236:18;1256:25;;;;;;;;1271:8;1256:25;;;1228:54;;;;;;;;;;;786:503;;;;;;:::o;7138:210::-;7195:4;445;7318:3;:12;;;:23;;;;;;7311:30;;7138:210;;;:::o;44325:3713:54:-;44420:4;44482:12;44497:11;;;;;;;;;;;:30;;;44536:4;44543:5;44550:8;44560:11;44497:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44497:75:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44497:75:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;44497:75:54;;;;;;;;;;;;;;;;44482:90;;44597:1;44586:7;:12;44582:146;;44621:96;44632:27;44661:46;44709:7;44621:10;:96::i;:::-;44614:103;;;;;44582:146;44835:16;:14;:16::i;:::-;44813:18;;:38;44809:146;;44874:70;44879:22;44903:40;44874:4;:70::i;:::-;44867:77;;;;;44809:146;44965:32;;:::i;:::-;45108:14;:24;45123:8;45108:24;;;;;;;;;;;;;;;:38;;;45087:4;:18;;:59;;;;;45274:37;45302:8;45274:27;:37::i;:::-;45237:4;:12;;45251:4;:19;;45236:75;;;;;;;;;;;;;;;;;;;;;;;;;;45341:18;45325:34;;;;;;;;:4;:12;;;:34;;;;;;;;;45321:185;;45382:113;45393:16;45411:63;45481:4;:12;;;45476:18;;;;;;;;45382:10;:113::i;:::-;45375:120;;;;;;45321:185;45605:2;45585:11;:23;45581:153;;;45643:4;:19;;;45624:4;:16;;:38;;;;;45581:153;;;45712:11;45693:4;:16;;:30;;;;;45581:153;45799:40;45815:5;45822:4;:16;;;45799:15;:40::i;:::-;45788:4;:8;;:51;;;;;;;;;;;;;;;;;;;;;;;45865:14;45853:26;;;;;;;;:4;:8;;;:26;;;;;;;;;45849:129;;45902:65;45907:4;:8;;;45917:49;45902:4;:65::i;:::-;45895:72;;;;;;45849:129;46260:46;46268:4;:19;;;46289:4;:16;;;46260:7;:46::i;:::-;46220:4;:12;;46234:4;:22;;46219:87;;;;;;;;;;;;;;;;;;;;;;;;;;46336:18;46320:34;;;;;;;;:4;:12;;;:34;;;;;;;;;46316:192;;46377:120;46388:16;46406:70;46483:4;:12;;;46478:18;;;;;;;;46377:10;:120::i;:::-;46370:127;;;;;;46316:192;46557:39;46565:12;;46579:4;:16;;;46557:7;:39::i;:::-;46519:4;:12;;46533:4;:20;;46518:78;;;;;;;;;;;;;;;;;;;;;;;;;;46626:18;46610:34;;;;;;;;:4;:12;;;:34;;;;;;;;;46606:183;;46667:111;46678:16;46696:61;46764:4;:12;;;46759:18;;;;;;;;46667:10;:111::i;:::-;46660:118;;;;;;46606:183;47331:37;47344:5;47351:4;:16;;;47331:12;:37::i;:::-;47320:4;:8;;:48;;;;;;;;;;;;;;;;;;;;;;;47398:14;47386:26;;;;;;;;:4;:8;;;:26;;;;;;;;;47378:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47565:4;:22;;;47528:14;:24;47543:8;47528:24;;;;;;;;;;;;;;;:34;;:59;;;;47638:11;;47597:14;:24;47612:8;47597:24;;;;;;;;;;;;;;;:38;;:52;;;;47674:4;:20;;;47659:12;:35;;;;47752:92;47764:5;47771:8;47781:4;:16;;;47799:4;:22;;;47823:4;:20;;;47752:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47894:11;;;;;;;;;;;:29;;;47932:4;47939:5;47946:8;47956:4;:16;;;47974:4;:18;;;47894:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47894:99:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47894:99:54;;;;48016:14;48011:20;;;;;;;;48004:27;;;;44325:3713;;;;;;:::o;5353:217:53:-;5427:5;5513:2;:11;;:19;5525:6;5513:19;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5513:19:53;5549:14;5542:21;;5353:217;;;;:::o;33160:4636:54:-;33267:4;33309:1;33291:14;:19;:42;;;;33332:1;33314:14;:19;33291:42;33283:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33401:27;;:::i;:::-;33542:28;:26;:28::i;:::-;33499:4;:12;;33513:4;:25;;33498:72;;;;;;;;;;;;;;;;;;;;;;;;;;33600:18;33584:34;;;;;;;;:4;:12;;;:34;;;;;;;;;33580:166;;33641:94;33652:16;33670:44;33721:4;:12;;;33716:18;;;;;;;;33641:10;:94::i;:::-;33634:101;;;;;33580:166;33814:1;33797:14;:18;33793:1265;;;34087:14;34067:4;:17;;:34;;;;;34152:77;34170:42;;;;;;;;34185:4;:25;;;34170:42;;;34214:14;34152:17;:77::i;:::-;34117:4;:12;;34131:4;:17;;34116:113;;;;;;;;;;;;;;;;;;;;;;;;;;34263:18;34247:34;;;;;;;;:4;:12;;;:34;;;;;;;;;34243:183;;34308:103;34319:16;34337:53;34397:4;:12;;;34392:18;;;;;;;;34308:10;:103::i;:::-;34301:110;;;;;34243:183;33793:1265;;;34720:82;34743:14;34759:42;;;;;;;;34774:4;:25;;;34759:42;;;34720:22;:82::i;:::-;34685:4;:12;;34699:4;:17;;34684:118;;;;;;;;;;;;;;;;;;;;;;;;;;34836:18;34820:34;;;;;;;;:4;:12;;;:34;;;;;;;;;34816:183;;34881:103;34892:16;34910:53;34970:4;:12;;;34965:18;;;;;;;;34881:10;:103::i;:::-;34874:110;;;;;34816:183;35033:14;35013:4;:17;;:34;;;;;33793:1265;35109:12;35124:11;;;;;;;;;;;:25;;;35158:4;35165:8;35175:4;:17;;;35124:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35124:69:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35124:69:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;35124:69:54;;;;;;;;;;;;;;;;35109:84;;35218:1;35207:7;:12;35203:140;;35242:90;35253:27;35282:40;35324:7;35242:10;:90::i;:::-;35235:97;;;;;;35203:140;35450:16;:14;:16::i;:::-;35428:18;;:38;35424:140;;35489:64;35494:22;35518:34;35489:4;:64::i;:::-;35482:71;;;;;;35424:140;35852:39;35860:11;;35873:4;:17;;;35852:7;:39::i;:::-;35815:4;:12;;35829:4;:19;;35814:77;;;;;;;;;;;;;;;;;;;;;;;;;;35921:18;35905:34;;;;;;;;:4;:12;;;:34;;;;;;;;;35901:176;;35962:104;35973:16;35991:54;36052:4;:12;;;36047:18;;;;;;;;35962:10;:104::i;:::-;35955:111;;;;;;35901:176;36127:51;36135:13;:23;36149:8;36135:23;;;;;;;;;;;;;;;;36160:4;:17;;;36127:7;:51::i;:::-;36088:4;:12;;36102:4;:21;;36087:91;;;;;;;;;;;;;;;;;;;;;;;;;;36208:18;36192:34;;;;;;;;:4;:12;;;:34;;;;;;;;;36188:179;;36249:107;36260:16;36278:57;36342:4;:12;;;36337:18;;;;;;;;36249:10;:107::i;:::-;36242:114;;;;;;36188:179;36462:4;:17;;;36445:14;:12;:14::i;:::-;:34;36441:153;;;36502:81;36507:29;36538:44;36502:4;:81::i;:::-;36495:88;;;;;;36441:153;37135:42;37149:8;37159:4;:17;;;37135:13;:42::i;:::-;37124:4;:8;;:53;;;;;;;;;;;;;;;;;;;;;;;37207:14;37195:26;;;;;;;;:4;:8;;;:26;;;;;;;;;37187:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37342:4;:19;;;37328:11;:33;;;;37397:4;:21;;;37371:13;:23;37385:8;37371:23;;;;;;;;;;;;;;;:47;;;;37520:4;37493:52;;37502:8;37493:52;;;37527:4;:17;;;37493:52;;;;;;;;;;;;;;;;;;37560:54;37567:8;37577:4;:17;;;37596:4;:17;;;37560:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37664:11;;;;;;;;;;;:24;;;37697:4;37704:8;37714:4;:17;;;37733:4;:17;;;37664:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37664:87:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37664:87:54;;;;37774:14;37769:20;;;;;;;;37762:27;;;;33160:4636;;;;;;:::o;542:331:55:-;598:9;609:4;634:1;629;:6;625:67;;;659:18;679:1;651:30;;;;;;;;;625:67;702:6;715:1;711;:5;702:14;;740:1;735;731;:5;;;;;;:10;727:140;;765:26;793:1;757:38;;;;;;;;;;727:140;834:18;854:1;826:30;;;;;542:331;;;;;;:::o;963:209::-;1019:9;1030:4;1055:1;1050;:6;1046:75;;;1080:26;1108:1;1072:38;;;;;;;;;1046:75;1139:18;1163:1;1159;:5;;;;;;1131:34;;;;963:209;;;;;;:::o;50020:3123:54:-;50149:4;50209:12;50224:11;;;;;;;;;;;:34;;;50267:4;50282:16;50301:10;50313:8;50323:11;50224:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50224:111:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50224:111:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;50224:111:54;;;;;;;;;;;;;;;;50209:126;;50360:1;50349:7;:12;50345:143;;50384:93;50395:27;50424:43;50469:7;50384:10;:93::i;:::-;50377:100;;;;;50345:143;50595:16;:14;:16::i;:::-;50573:18;;:38;50569:143;;50634:67;50639:22;50663:37;50634:4;:67::i;:::-;50627:74;;;;;50569:143;50855:16;:14;:16::i;:::-;50814;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50814:37:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50814:37:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;50814:37:54;;;;;;;;;;;;;;;;:57;50810:173;;50894:78;50899:22;50923:48;50894:4;:78::i;:::-;50887:85;;;;;50810:173;51053:10;51041:22;;:8;:22;;;51037:138;;;51086:78;51091:26;51119:44;51086:4;:78::i;:::-;51079:85;;;;;51037:138;51242:1;51227:11;:16;51223:140;;;51266:86;51271:36;51309:42;51266:4;:86::i;:::-;51259:93;;;;;51223:140;51436:2;51416:11;:23;51412:151;;;51462:90;51467:36;51505:46;51462:4;:90::i;:::-;51455:97;;;;;51412:151;51653:21;51676:16;51696:11;;;;;;;;;;;:41;;;51746:4;51761:16;51780:11;51696:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51696:96:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;51696:96:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;51696:96:54;;;;;;;;;;;;;;;;;;;;;;;;;51652:140;;;;51826:1;51806:16;:21;51802:189;;51850:130;51861:35;51898:63;51963:16;51850:10;:130::i;:::-;51843:137;;;;;;;51802:189;52089:16;:26;;;52116:8;52089:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52089:36:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52089:36:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;52089:36:54;;;;;;;;;;;;;;;;52075:11;:50;52071:164;;;52148:76;52153:32;52187:36;52148:4;:76::i;:::-;52141:83;;;;;;;52071:164;52285:21;52309:51;52326:10;52338:8;52348:11;52309:16;:51::i;:::-;52285:75;;52399:14;52394:20;;;;;;;;52374:16;:40;52370:156;;52437:78;52448:16;52442:23;;;;;;;;52467:47;52437:4;:78::i;:::-;52430:85;;;;;;;;52370:156;52621:15;52639:16;:22;;;52662:10;52674:8;52684:11;52639:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52639:57:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52639:57:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;52639:57:54;;;;;;;;;;;;;;;;52621:75;;52733:14;52728:20;;;;;;;;52714:10;:34;52706:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52835:90;52851:10;52863:8;52873:11;52894:16;52913:11;52835:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52975:11;;;;;;;;;;;:33;;;53017:4;53032:16;53051:10;53063:8;53073:11;53086;52975:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52975:123:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52975:123:54;;;;53121:14;53116:20;;;;;;;;53109:27;;;;;;;50020:3123;;;;;;;:::o;4860:1116:62:-;4927:9;4938:10;;:::i;:::-;4962:14;4978:24;5006:31;5014:1;:10;;;5026:1;:10;;;5006:7;:31::i;:::-;4961:76;;;;5059:18;5051:26;;;;;;;;:4;:26;;;;;;;;;5047:90;;5101:4;5107:18;;;;;;;;5122:1;5107:18;;;5093:33;;;;;;;;;;;5047:90;5449:14;5465:37;5506:42;493:1;445:4;484:10;;;;;;5528:19;5506:7;:42::i;:::-;5448:100;;;;5570:18;5562:26;;;;;;;;:4;:26;;;;;;;;;5558:90;;5612:4;5618:18;;;;;;;;5633:1;5618:18;;;5604:33;;;;;;;;;;;;;5558:90;5659:14;5675:12;5691:51;5699:32;445:4;5691:7;:51::i;:::-;5658:84;;;;5886:18;5878:26;;;;;;;;:4;:26;;;;;;;;;5871:34;;;;5924:18;5944:24;;;;;;;;5959:7;5944:24;;;5916:53;;;;;;;;;;;;;4860:1116;;;;;;:::o;39005:3103:54:-;39089:4;39146:12;39161:11;;;;;;;;;;;:25;;;39195:4;39202:8;39212:12;39161:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;39161:64:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;39161:64:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;39161:64:54;;;;;;;;;;;;;;;;39146:79;;39250:1;39239:7;:12;39235:140;;39274:90;39285:27;39314:40;39356:7;39274:10;:90::i;:::-;39267:97;;;;;39235:140;39482:16;:14;:16::i;:::-;39460:18;;:38;39456:140;;39521:64;39526:22;39550:34;39521:4;:64::i;:::-;39514:71;;;;;39456:140;39702:12;39685:14;:12;:14::i;:::-;:29;39681:141;;;39737:74;39742:29;39773:37;39737:4;:74::i;:::-;39730:81;;;;;39681:141;39832:27;;:::i;:::-;40140:37;40168:8;40140:27;:37::i;:::-;40103:4;:12;;40117:4;:19;;40102:75;;;;;;;;;;;;;;;;;;;;;;;;;;40207:18;40191:34;;;;;;;;:4;:12;;;:34;;;;;;;;;40187:179;;40248:107;40259:16;40277:57;40341:4;:12;;;40336:18;;;;;;;;40248:10;:107::i;:::-;40241:114;;;;;;40187:179;40417:42;40425:4;:19;;;40446:12;40417:7;:42::i;:::-;40377:4;:12;;40391:4;:22;;40376:83;;;;;;;;;;;;;;;;;;;;;;;;;;40489:18;40473:34;;;;;;;;:4;:12;;;:34;;;;;;;;;40469:186;;40530:114;40541:16;40559:64;40630:4;:12;;;40625:18;;;;;;;;40530:10;:114::i;:::-;40523:121;;;;;;40469:186;40704:35;40712:12;;40726;40704:7;:35::i;:::-;40666:4;:12;;40680:4;:20;;40665:74;;;;;;;;;;;;;;;;;;;;;;;;;;40769:18;40753:34;;;;;;;;:4;:12;;;:34;;;;;;;;;40749:177;;40810:105;40821:16;40839:55;40901:4;:12;;;40896:18;;;;;;;;40810:10;:105::i;:::-;40803:112;;;;;;40749:177;41463:37;41477:8;41487:12;41463:13;:37::i;:::-;41452:4;:8;;:48;;;;;;;;;;;;;;;;;;;;;;;41530:14;41518:26;;;;;;;;:4;:8;;;:26;;;;;;;;;41510:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41692:4;:22;;;41655:14;:24;41670:8;41655:24;;;;;;;;;;;;;;;:34;;:59;;;;41765:11;;41724:14;:24;41739:8;41724:24;;;;;;;;;;;;;;;:38;;:52;;;;41801:4;:20;;;41786:12;:35;;;;41874:76;41881:8;41891:12;41905:4;:22;;;41929:4;:20;;;41874:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42000:11;;;;;;;;;;;:24;;;42033:4;42040:8;42050:12;42000:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42000:63:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42000:63:54;;;;42086:14;42081:20;;;;;;;;42074:27;;;;39005:3103;;;;;:::o;150:6121:53:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.4;\n\nimport \"./CToken.sol\";\n\n/**\n * @title Compound's CEther Contract\n * @notice CToken which wraps Ether\n * @author Compound\n */\ncontract CEther is CToken {\n\n    /**\n     * @notice Construct a new CEther money market\n     * @param comptroller_ The address of the Comptroller\n     * @param interestRateModel_ The address of the interest rate model\n     * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n     * @param name_ ERC-20 name of this token\n     * @param symbol_ ERC-20 symbol of this token\n     * @param decimals_ ERC-20 decimal precision of this token\n     */\n    constructor(ComptrollerInterface comptroller_,\n                InterestRateModel interestRateModel_,\n                uint initialExchangeRateMantissa_,\n                string memory name_,\n                string memory symbol_,\n                uint decimals_) public\n    CToken(comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_) {}\n\n    /*** User Interface ***/\n\n    /**\n     * @notice Sender supplies assets into the market and receives cTokens in exchange\n     * @dev Reverts upon any failure\n     */\n    function mint() external payable {\n        requireNoError(mintInternal(msg.value), \"mint failed\");\n    }\n\n    /**\n     * @notice Sender redeems cTokens in exchange for the underlying asset\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\n     * @param redeemTokens The number of cTokens to redeem into underlying\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function redeem(uint redeemTokens) external returns (uint) {\n        return redeemInternal(redeemTokens);\n    }\n\n    /**\n     * @notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\n     * @param redeemAmount The amount of underlying to redeem\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function redeemUnderlying(uint redeemAmount) external returns (uint) {\n        return redeemUnderlyingInternal(redeemAmount);\n    }\n\n    /**\n      * @notice Sender borrows assets from the protocol to their own address\n      * @param borrowAmount The amount of the underlying asset to borrow\n      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n      */\n    function borrow(uint borrowAmount) external returns (uint) {\n        return borrowInternal(borrowAmount);\n    }\n\n    /**\n     * @notice Sender repays their own borrow\n     * @dev Reverts upon any failure\n     */\n    function repayBorrow() external payable {\n        requireNoError(repayBorrowInternal(msg.value), \"repayBorrow failed\");\n    }\n\n    /**\n     * @notice Sender repays a borrow belonging to borrower\n     * @dev Reverts upon any failure\n     * @param borrower the account with the debt being payed off\n     */\n    function repayBorrowBehalf(address borrower) external payable {\n        requireNoError(repayBorrowBehalfInternal(borrower, msg.value), \"repayBorrowBehalf failed\");\n    }\n\n    /**\n     * @notice The sender liquidates the borrowers collateral.\n     *  The collateral seized is transferred to the liquidator.\n     * @dev Reverts upon any failure\n     * @param borrower The borrower of this cToken to be liquidated\n     * @param cTokenCollateral The market in which to seize collateral from the borrower\n     */\n    function liquidateBorrow(address borrower, CToken cTokenCollateral) external payable {\n        requireNoError(liquidateBorrowInternal(borrower, msg.value, cTokenCollateral), \"liquidateBorrow failed\");\n    }\n\n    /**\n     * @notice Send Ether to CEther to mint\n     */\n    function () external payable {\n        requireNoError(mintInternal(msg.value), \"mint failed\");\n    }\n\n    /*** Safe Token ***/\n\n    /**\n     * @notice Gets balance of this contract in terms of Ether, before this message\n     * @dev This excludes the value of the current message, if any\n     * @return The quantity of Ether owned by this contract\n     */\n    function getCashPrior() internal view returns (uint) {\n        (MathError err, uint startingBalance) = subUInt(address(this).balance, msg.value);\n        require(err == MathError.NO_ERROR);\n        return startingBalance;\n    }\n\n    /**\n     * @notice Checks whether the requested transfer matches the `msg`\n     * @dev Does NOT do a transfer\n     * @param from Address sending the Ether\n     * @param amount Amount of Ether being sent\n     * @return Whether or not the transfer checks out\n     */\n    function checkTransferIn(address from, uint amount) internal view returns (Error) {\n        // Sanity checks\n        require(msg.sender == from, \"sender mismatch\");\n        require(msg.value == amount, \"value mismatch\");\n        return Error.NO_ERROR;\n    }\n\n    /**\n     * @notice Perform the actual transfer in, which is a no-op\n     * @param from Address sending the Ether\n     * @param amount Amount of Ether being sent\n     * @return Success\n     */\n    function doTransferIn(address from, uint amount) internal returns (Error) {\n        // Sanity checks\n        require(msg.sender == from, \"sender mismatch\");\n        require(msg.value == amount, \"value mismatch\");\n        return Error.NO_ERROR;\n    }\n\n    function doTransferOut(address payable to, uint amount) internal returns (Error) {\n        /* Send the Ether, with minimal gas and revert on failure */\n        to.transfer(amount);\n        return Error.NO_ERROR;\n    }\n\n    function requireNoError(uint errCode, string memory message) internal pure {\n        if (errCode == uint(Error.NO_ERROR)) {\n            return;\n        }\n\n        bytes memory fullMessage = new bytes(bytes(message).length + 5);\n        uint i;\n\n        for (i = 0; i < bytes(message).length; i++) {\n            fullMessage[i] = bytes(message)[i];\n        }\n\n        fullMessage[i+0] = byte(uint8(32));\n        fullMessage[i+1] = byte(uint8(40));\n        fullMessage[i+2] = byte(uint8(48 + ( errCode / 10 )));\n        fullMessage[i+3] = byte(uint8(48 + ( errCode % 10 )));\n        fullMessage[i+4] = byte(uint8(41));\n\n        require(errCode == uint(Error.NO_ERROR), string(fullMessage));\n    }\n}\n",
  "sourcePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/CEther.sol",
  "ast": {
    "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/CEther.sol",
    "exportedSymbols": {
      "CEther": [
        15383
      ]
    },
    "id": 15384,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15006,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:53"
      },
      {
        "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/CToken.sol",
        "file": "./CToken.sol",
        "id": 15007,
        "nodeType": "ImportDirective",
        "scope": 15384,
        "sourceUnit": 19107,
        "src": "25:22:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15008,
              "name": "CToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19106,
              "src": "169:6:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CToken_$19106",
                "typeString": "contract CToken"
              }
            },
            "id": 15009,
            "nodeType": "InheritanceSpecifier",
            "src": "169:6:53"
          }
        ],
        "contractDependencies": [
          19106,
          19291,
          21794,
          22116,
          22707,
          22959
        ],
        "contractKind": "contract",
        "documentation": "@title Compound's CEther Contract\n@notice CToken which wraps Ether\n@author Compound",
        "fullyImplemented": true,
        "id": 15383,
        "linearizedBaseContracts": [
          15383,
          19106,
          22959,
          22116,
          22707,
          19291,
          21794
        ],
        "name": "CEther",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15032,
              "nodeType": "Block",
              "src": "993:2:53",
              "statements": []
            },
            "documentation": "@notice Construct a new CEther money market\n@param comptroller_ The address of the Comptroller\n@param interestRateModel_ The address of the interest rate model\n@param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n@param name_ ERC-20 name of this token\n@param symbol_ ERC-20 symbol of this token\n@param decimals_ ERC-20 decimal precision of this token",
            "id": 15033,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15024,
                    "name": "comptroller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15011,
                    "src": "902:12:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$21696",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15025,
                    "name": "interestRateModel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15013,
                    "src": "916:18:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$22728",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15026,
                    "name": "initialExchangeRateMantissa_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15015,
                    "src": "936:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15027,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15017,
                    "src": "966:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15028,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15019,
                    "src": "973:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15029,
                    "name": "decimals_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15021,
                    "src": "982:9:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 15030,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15023,
                  "name": "CToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19106,
                  "src": "895:6:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CToken_$19106_$",
                    "typeString": "type(contract CToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "895:97:53"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15011,
                  "name": "comptroller_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "636:33:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerInterface_$21696",
                    "typeString": "contract ComptrollerInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15010,
                    "name": "ComptrollerInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21696,
                    "src": "636:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$21696",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15013,
                  "name": "interestRateModel_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "687:36:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InterestRateModel_$22728",
                    "typeString": "contract InterestRateModel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15012,
                    "name": "InterestRateModel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22728,
                    "src": "687:17:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$22728",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15015,
                  "name": "initialExchangeRateMantissa_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "741:33:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15014,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15017,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "792:19:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15016,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15019,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "829:21:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15018,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15021,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "868:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15020,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:248:53"
            },
            "returnParameters": {
              "id": 15031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:53"
            },
            "scope": 15383,
            "src": "624:371:53",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15044,
              "nodeType": "Block",
              "src": "1204:71:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15038,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "1242:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1242:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15037,
                          "name": "mintInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16834,
                          "src": "1229:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) returns (uint256)"
                          }
                        },
                        "id": 15040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1229:23:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 15041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1254:13:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 15036,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "1214:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:54:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15043,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:54:53"
                }
              ]
            },
            "documentation": "@notice Sender supplies assets into the market and receives cTokens in exchange\n@dev Reverts upon any failure",
            "id": 15045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:2:53"
            },
            "returnParameters": {
              "id": 15035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1204:0:53"
            },
            "scope": 15383,
            "src": "1171:104:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15056,
              "nodeType": "Block",
              "src": "1677:52:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15053,
                        "name": "redeemTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15047,
                        "src": "1709:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15052,
                      "name": "redeemInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17151,
                      "src": "1694:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 15054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1694:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15051,
                  "id": 15055,
                  "nodeType": "Return",
                  "src": "1687:35:53"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for the underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemTokens The number of cTokens to redeem into underlying\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 15057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15047,
                  "name": "redeemTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 15057,
                  "src": "1634:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15046,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1633:19:53"
            },
            "returnParameters": {
              "id": 15051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15050,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15057,
                  "src": "1671:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15049,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1670:6:53"
            },
            "scope": 15383,
            "src": "1618:111:53",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15068,
              "nodeType": "Block",
              "src": "2146:62:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15065,
                        "name": "redeemAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15059,
                        "src": "2188:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15064,
                      "name": "redeemUnderlyingInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17189,
                      "src": "2163:24:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 15066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:38:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15063,
                  "id": 15067,
                  "nodeType": "Return",
                  "src": "2156:45:53"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemAmount The amount of underlying to redeem\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 15069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15059,
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15069,
                  "src": "2103:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15058,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2103:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2102:19:53"
            },
            "returnParameters": {
              "id": 15063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15062,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15069,
                  "src": "2140:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15061,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2139:6:53"
            },
            "scope": 15383,
            "src": "2077:131:53",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15080,
              "nodeType": "Block",
              "src": "2528:52:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15077,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15071,
                        "src": "2560:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15076,
                      "name": "borrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17561,
                      "src": "2545:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 15078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2545:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15075,
                  "id": 15079,
                  "nodeType": "Return",
                  "src": "2538:35:53"
                }
              ]
            },
            "documentation": "@notice Sender borrows assets from the protocol to their own address\n@param borrowAmount The amount of the underlying asset to borrow\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 15081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15071,
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15081,
                  "src": "2485:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15070,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2484:19:53"
            },
            "returnParameters": {
              "id": 15075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15074,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15081,
                  "src": "2522:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15073,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2521:6:53"
            },
            "scope": 15383,
            "src": "2469:111:53",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15092,
              "nodeType": "Block",
              "src": "2725:85:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15086,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "2770:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2770:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15085,
                          "name": "repayBorrowInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17826,
                          "src": "2750:19:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) returns (uint256)"
                          }
                        },
                        "id": 15088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2750:30:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77206661696c6564",
                        "id": 15089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2782:20:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        },
                        "value": "repayBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        }
                      ],
                      "id": 15084,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "2735:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2735:68:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15091,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:68:53"
                }
              ]
            },
            "documentation": "@notice Sender repays their own borrow\n@dev Reverts upon any failure",
            "id": 15093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2705:2:53"
            },
            "returnParameters": {
              "id": 15083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2725:0:53"
            },
            "scope": 15383,
            "src": "2685:125:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15107,
              "nodeType": "Block",
              "src": "3056:107:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15100,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15095,
                            "src": "3107:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15101,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "3117:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3117:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15099,
                          "name": "repayBorrowBehalfInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17866,
                          "src": "3081:25:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) returns (uint256)"
                          }
                        },
                        "id": 15103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3081:46:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77426568616c66206661696c6564",
                        "id": 15104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3129:26:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        },
                        "value": "repayBorrowBehalf failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        }
                      ],
                      "id": 15098,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "3066:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3066:90:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15106,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:90:53"
                }
              ]
            },
            "documentation": "@notice Sender repays a borrow belonging to borrower\n@dev Reverts upon any failure\n@param borrower the account with the debt being payed off",
            "id": 15108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrowBehalf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15095,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 15108,
                  "src": "3021:16:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3021:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3020:18:53"
            },
            "returnParameters": {
              "id": 15097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:0:53"
            },
            "scope": 15383,
            "src": "2994:169:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15125,
              "nodeType": "Block",
              "src": "3591:121:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15117,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15110,
                            "src": "3640:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15118,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "3650:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3650:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 15120,
                            "name": "cTokenCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15112,
                            "src": "3661:16:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CToken_$19106",
                              "typeString": "contract CToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_CToken_$19106",
                              "typeString": "contract CToken"
                            }
                          ],
                          "id": 15116,
                          "name": "liquidateBorrowInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18215,
                          "src": "3616:23:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_CToken_$19106_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256,contract CToken) returns (uint256)"
                          }
                        },
                        "id": 15121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3616:62:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6971756964617465426f72726f77206661696c6564",
                        "id": 15122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3680:24:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        },
                        "value": "liquidateBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        }
                      ],
                      "id": 15115,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "3601:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:104:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15124,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:104:53"
                }
              ]
            },
            "documentation": "@notice The sender liquidates the borrowers collateral.\n The collateral seized is transferred to the liquidator.\n@dev Reverts upon any failure\n@param borrower The borrower of this cToken to be liquidated\n@param cTokenCollateral The market in which to seize collateral from the borrower",
            "id": 15126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15110,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 15126,
                  "src": "3531:16:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3531:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15112,
                  "name": "cTokenCollateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 15126,
                  "src": "3549:23:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$19106",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15111,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19106,
                    "src": "3549:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$19106",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3530:43:53"
            },
            "returnParameters": {
              "id": 15114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3591:0:53"
            },
            "scope": 15383,
            "src": "3506:206:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15137,
              "nodeType": "Block",
              "src": "3807:71:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15131,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "3845:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3845:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15130,
                          "name": "mintInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16834,
                          "src": "3832:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) returns (uint256)"
                          }
                        },
                        "id": 15133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3832:23:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 15134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3857:13:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 15129,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "3817:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:54:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15136,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:54:53"
                }
              ]
            },
            "documentation": "@notice Send Ether to CEther to mint",
            "id": 15138,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3787:2:53"
            },
            "returnParameters": {
              "id": 15128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3807:0:53"
            },
            "scope": 15383,
            "src": "3778:100:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15165,
              "nodeType": "Block",
              "src": "4190:174:53",
              "statements": [
                {
                  "assignments": [
                    15144,
                    15146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15144,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 15165,
                      "src": "4201:13:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MathError_$19113",
                        "typeString": "enum CarefulMath.MathError"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 15143,
                        "name": "MathError",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 19113,
                        "src": "4201:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MathError_$19113",
                          "typeString": "enum CarefulMath.MathError"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15146,
                      "name": "startingBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 15165,
                      "src": "4216:20:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15145,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4216:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15155,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 15149,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33037,
                              "src": "4256:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CEther_$15383",
                                "typeString": "contract CEther"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CEther_$15383",
                                "typeString": "contract CEther"
                              }
                            ],
                            "id": 15148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4248:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 15150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4248:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 15151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4248:21:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32817,
                          "src": "4271:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4271:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15147,
                      "name": "subUInt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19218,
                      "src": "4240:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_enum$_MathError_$19113_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (enum CarefulMath.MathError,uint256)"
                      }
                    },
                    "id": 15154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4240:41:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_MathError_$19113_$_t_uint256_$",
                      "typeString": "tuple(enum CarefulMath.MathError,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4200:81:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_MathError_$19113",
                          "typeString": "enum CarefulMath.MathError"
                        },
                        "id": 15160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15157,
                          "name": "err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15144,
                          "src": "4299:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$19113",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15158,
                            "name": "MathError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19113,
                            "src": "4306:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MathError_$19113_$",
                              "typeString": "type(enum CarefulMath.MathError)"
                            }
                          },
                          "id": 15159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4306:18:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$19113",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "src": "4299:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32820,
                      "src": "4291:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4291:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15162,
                  "nodeType": "ExpressionStatement",
                  "src": "4291:34:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15163,
                    "name": "startingBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15146,
                    "src": "4342:15:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15142,
                  "id": 15164,
                  "nodeType": "Return",
                  "src": "4335:22:53"
                }
              ]
            },
            "documentation": "@notice Gets balance of this contract in terms of Ether, before this message\n@dev This excludes the value of the current message, if any\n@return The quantity of Ether owned by this contract",
            "id": 15166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCashPrior",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4158:2:53"
            },
            "returnParameters": {
              "id": 15142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15141,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15166,
                  "src": "4184:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4184:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4183:6:53"
            },
            "scope": 15383,
            "src": "4137:227:53",
            "stateMutability": "view",
            "superFunction": 19078,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15194,
              "nodeType": "Block",
              "src": "4721:175:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32817,
                            "src": "4764:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4764:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15178,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15168,
                          "src": "4778:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4764:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 15180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4784:17:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 15175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "4756:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4756:46:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15182,
                  "nodeType": "ExpressionStatement",
                  "src": "4756:46:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32817,
                            "src": "4820:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4820:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15186,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15170,
                          "src": "4833:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4820:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 15188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4841:16:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 15183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "4812:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:46:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15190,
                  "nodeType": "ExpressionStatement",
                  "src": "4812:46:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 15191,
                      "name": "Error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21978,
                      "src": "4875:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                        "typeString": "type(enum TokenErrorReporter.Error)"
                      }
                    },
                    "id": 15192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NO_ERROR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4875:14:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "functionReturnParameters": 15174,
                  "id": 15193,
                  "nodeType": "Return",
                  "src": "4868:21:53"
                }
              ]
            },
            "documentation": "@notice Checks whether the requested transfer matches the `msg`\n@dev Does NOT do a transfer\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return Whether or not the transfer checks out",
            "id": 15195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15168,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 15195,
                  "src": "4664:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4664:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15170,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15195,
                  "src": "4678:11:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4678:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4663:27:53"
            },
            "returnParameters": {
              "id": 15174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15173,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15195,
                  "src": "4714:5:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$21978",
                    "typeString": "enum TokenErrorReporter.Error"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15172,
                    "name": "Error",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21978,
                    "src": "4714:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4713:7:53"
            },
            "scope": 15383,
            "src": "4639:257:53",
            "stateMutability": "view",
            "superFunction": 19087,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15223,
              "nodeType": "Block",
              "src": "5172:175:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32817,
                            "src": "5215:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5215:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15207,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15197,
                          "src": "5229:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5215:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 15209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5235:17:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 15204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "5207:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5207:46:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15211,
                  "nodeType": "ExpressionStatement",
                  "src": "5207:46:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32817,
                            "src": "5271:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5271:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15215,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15199,
                          "src": "5284:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5271:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 15217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5292:16:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 15212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "5263:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5263:46:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15219,
                  "nodeType": "ExpressionStatement",
                  "src": "5263:46:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 15220,
                      "name": "Error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21978,
                      "src": "5326:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                        "typeString": "type(enum TokenErrorReporter.Error)"
                      }
                    },
                    "id": 15221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NO_ERROR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5326:14:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "functionReturnParameters": 15203,
                  "id": 15222,
                  "nodeType": "Return",
                  "src": "5319:21:53"
                }
              ]
            },
            "documentation": "@notice Perform the actual transfer in, which is a no-op\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return Success",
            "id": 15224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15197,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 15224,
                  "src": "5120:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5120:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15199,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15224,
                  "src": "5134:11:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15198,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5134:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5119:27:53"
            },
            "returnParameters": {
              "id": 15203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15202,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15224,
                  "src": "5165:5:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$21978",
                    "typeString": "enum TokenErrorReporter.Error"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15201,
                    "name": "Error",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21978,
                    "src": "5165:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5164:7:53"
            },
            "scope": 15383,
            "src": "5098:249:53",
            "stateMutability": "nonpayable",
            "superFunction": 19096,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15242,
              "nodeType": "Block",
              "src": "5434:136:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15236,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15228,
                        "src": "5525:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15233,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15226,
                        "src": "5513:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 15235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5513:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:19:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15238,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:19:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 15239,
                      "name": "Error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21978,
                      "src": "5549:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                        "typeString": "type(enum TokenErrorReporter.Error)"
                      }
                    },
                    "id": 15240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NO_ERROR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5549:14:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "functionReturnParameters": 15232,
                  "id": 15241,
                  "nodeType": "Return",
                  "src": "5542:21:53"
                }
              ]
            },
            "documentation": null,
            "id": 15243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferOut",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15226,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 15243,
                  "src": "5376:18:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 15225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5376:15:53",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15228,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15243,
                  "src": "5396:11:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5396:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5375:33:53"
            },
            "returnParameters": {
              "id": 15232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15231,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15243,
                  "src": "5427:5:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$21978",
                    "typeString": "enum TokenErrorReporter.Error"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15230,
                    "name": "Error",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21978,
                    "src": "5427:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5426:7:53"
            },
            "scope": 15383,
            "src": "5353:217:53",
            "stateMutability": "nonpayable",
            "superFunction": 19105,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15381,
              "nodeType": "Block",
              "src": "5651:618:53",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15250,
                      "name": "errCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15245,
                      "src": "5665:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15252,
                            "name": "Error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21978,
                            "src": "5681:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                              "typeString": "type(enum TokenErrorReporter.Error)"
                            }
                          },
                          "id": 15253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5681:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$21978",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Error_$21978",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        ],
                        "id": 15251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5676:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 15254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5676:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5665:31:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 15258,
                  "nodeType": "IfStatement",
                  "src": "5661:68:53",
                  "trueBody": {
                    "id": 15257,
                    "nodeType": "Block",
                    "src": "5698:31:53",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 15249,
                        "id": 15256,
                        "nodeType": "Return",
                        "src": "5712:7:53"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    15260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15260,
                      "name": "fullMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 15381,
                      "src": "5739:24:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 15259,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5739:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15270,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 15264,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15247,
                                "src": "5782:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 15263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5776:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 15265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5776:14:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 15266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5776:21:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 15267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5800:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "5776:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5766:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 15261,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5770:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 15269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5766:36:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5739:63:53"
                },
                {
                  "assignments": [
                    15272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15272,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 15381,
                      "src": "5812:6:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15271,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5812:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15273,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5812:6:53"
                },
                {
                  "body": {
                    "id": 15297,
                    "nodeType": "Block",
                    "src": "5873:59:53",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 15295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 15287,
                              "name": "fullMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15260,
                              "src": "5887:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 15289,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 15288,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15272,
                              "src": "5899:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5887:14:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 15291,
                                  "name": "message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15247,
                                  "src": "5910:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 15290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5904:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 15292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5904:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 15294,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 15293,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15272,
                              "src": "5919:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5904:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "5887:34:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 15296,
                        "nodeType": "ExpressionStatement",
                        "src": "5887:34:53"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15278,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15272,
                      "src": "5841:1:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15280,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15247,
                            "src": "5851:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 15279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5845:5:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 15281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5845:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5845:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5841:25:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15298,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 15274,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15272,
                        "src": "5834:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 15275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5838:1:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5834:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15277,
                    "nodeType": "ExpressionStatement",
                    "src": "5834:5:53"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5868:3:53",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 15284,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15272,
                        "src": "5868:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15286,
                    "nodeType": "ExpressionStatement",
                    "src": "5868:3:53"
                  },
                  "nodeType": "ForStatement",
                  "src": "5829:103:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15299,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "5942:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15303,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15300,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "5954:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 15301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5956:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5954:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5942:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3332",
                              "id": 15306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5972:2:53",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              }
                            ],
                            "id": 15305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5966:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5966:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5961:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5961:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "5942:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15310,
                  "nodeType": "ExpressionStatement",
                  "src": "5942:34:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15311,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "5986:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15315,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15312,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "5998:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 15313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6000:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5998:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5986:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3430",
                              "id": 15318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6016:2:53",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              }
                            ],
                            "id": 15317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6010:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6010:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6005:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6005:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "5986:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15322,
                  "nodeType": "ExpressionStatement",
                  "src": "5986:34:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15323,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "6030:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15327,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15324,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "6042:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 15325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6044:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6042:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6030:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 15335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 15330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6060:2:53",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 15333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 15331,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15245,
                                      "src": "6067:7:53",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 15332,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6077:2:53",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6067:12:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 15334,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6065:16:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6060:21:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 15329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6054:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6054:28:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6049:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6049:34:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6030:53:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15339,
                  "nodeType": "ExpressionStatement",
                  "src": "6030:53:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15340,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "6093:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15344,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15341,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "6105:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 15342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6107:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "6105:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6093:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 15352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 15347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6123:2:53",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 15350,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 15348,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15245,
                                      "src": "6130:7:53",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "%",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 15349,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6140:2:53",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6130:12:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 15351,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6128:16:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6123:21:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 15346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6117:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6117:28:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6112:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6112:34:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6093:53:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15356,
                  "nodeType": "ExpressionStatement",
                  "src": "6093:53:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15357,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "6156:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15361,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15358,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "6168:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 15359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6170:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6168:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6156:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3431",
                              "id": 15364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6186:2:53",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              },
                              "value": "41"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              }
                            ],
                            "id": 15363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6180:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6180:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6175:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6175:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6156:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15368,
                  "nodeType": "ExpressionStatement",
                  "src": "6156:34:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15370,
                          "name": "errCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15245,
                          "src": "6209:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 15372,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21978,
                                "src": "6225:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                                  "typeString": "type(enum TokenErrorReporter.Error)"
                                }
                              },
                              "id": 15373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6225:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$21978",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$21978",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            ],
                            "id": 15371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6220:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 15374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6220:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6209:31:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15377,
                            "name": "fullMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15260,
                            "src": "6249:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 15376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6242:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 15378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6242:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 15369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "6201:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6201:61:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15380,
                  "nodeType": "ExpressionStatement",
                  "src": "6201:61:53"
                }
              ]
            },
            "documentation": null,
            "id": 15382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requireNoError",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15245,
                  "name": "errCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 15382,
                  "src": "5600:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15244,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5600:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15247,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 15382,
                  "src": "5614:21:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5614:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5599:37:53"
            },
            "returnParameters": {
              "id": 15249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5651:0:53"
            },
            "scope": 15383,
            "src": "5576:693:53",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 15384,
        "src": "150:6121:53"
      }
    ],
    "src": "0:6272:53"
  },
  "legacyAST": {
    "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/CEther.sol",
    "exportedSymbols": {
      "CEther": [
        15383
      ]
    },
    "id": 15384,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15006,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:53"
      },
      {
        "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/test/compound/CToken.sol",
        "file": "./CToken.sol",
        "id": 15007,
        "nodeType": "ImportDirective",
        "scope": 15384,
        "sourceUnit": 19107,
        "src": "25:22:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15008,
              "name": "CToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19106,
              "src": "169:6:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CToken_$19106",
                "typeString": "contract CToken"
              }
            },
            "id": 15009,
            "nodeType": "InheritanceSpecifier",
            "src": "169:6:53"
          }
        ],
        "contractDependencies": [
          19106,
          19291,
          21794,
          22116,
          22707,
          22959
        ],
        "contractKind": "contract",
        "documentation": "@title Compound's CEther Contract\n@notice CToken which wraps Ether\n@author Compound",
        "fullyImplemented": true,
        "id": 15383,
        "linearizedBaseContracts": [
          15383,
          19106,
          22959,
          22116,
          22707,
          19291,
          21794
        ],
        "name": "CEther",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15032,
              "nodeType": "Block",
              "src": "993:2:53",
              "statements": []
            },
            "documentation": "@notice Construct a new CEther money market\n@param comptroller_ The address of the Comptroller\n@param interestRateModel_ The address of the interest rate model\n@param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n@param name_ ERC-20 name of this token\n@param symbol_ ERC-20 symbol of this token\n@param decimals_ ERC-20 decimal precision of this token",
            "id": 15033,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15024,
                    "name": "comptroller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15011,
                    "src": "902:12:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$21696",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15025,
                    "name": "interestRateModel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15013,
                    "src": "916:18:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$22728",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15026,
                    "name": "initialExchangeRateMantissa_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15015,
                    "src": "936:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15027,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15017,
                    "src": "966:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15028,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15019,
                    "src": "973:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15029,
                    "name": "decimals_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15021,
                    "src": "982:9:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 15030,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15023,
                  "name": "CToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19106,
                  "src": "895:6:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CToken_$19106_$",
                    "typeString": "type(contract CToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "895:97:53"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15011,
                  "name": "comptroller_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "636:33:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerInterface_$21696",
                    "typeString": "contract ComptrollerInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15010,
                    "name": "ComptrollerInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21696,
                    "src": "636:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$21696",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15013,
                  "name": "interestRateModel_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "687:36:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InterestRateModel_$22728",
                    "typeString": "contract InterestRateModel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15012,
                    "name": "InterestRateModel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22728,
                    "src": "687:17:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$22728",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15015,
                  "name": "initialExchangeRateMantissa_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "741:33:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15014,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15017,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "792:19:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15016,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15019,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "829:21:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15018,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15021,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 15033,
                  "src": "868:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15020,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:248:53"
            },
            "returnParameters": {
              "id": 15031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:53"
            },
            "scope": 15383,
            "src": "624:371:53",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15044,
              "nodeType": "Block",
              "src": "1204:71:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15038,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "1242:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1242:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15037,
                          "name": "mintInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16834,
                          "src": "1229:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) returns (uint256)"
                          }
                        },
                        "id": 15040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1229:23:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 15041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1254:13:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 15036,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "1214:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:54:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15043,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:54:53"
                }
              ]
            },
            "documentation": "@notice Sender supplies assets into the market and receives cTokens in exchange\n@dev Reverts upon any failure",
            "id": 15045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:2:53"
            },
            "returnParameters": {
              "id": 15035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1204:0:53"
            },
            "scope": 15383,
            "src": "1171:104:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15056,
              "nodeType": "Block",
              "src": "1677:52:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15053,
                        "name": "redeemTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15047,
                        "src": "1709:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15052,
                      "name": "redeemInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17151,
                      "src": "1694:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 15054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1694:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15051,
                  "id": 15055,
                  "nodeType": "Return",
                  "src": "1687:35:53"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for the underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemTokens The number of cTokens to redeem into underlying\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 15057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15047,
                  "name": "redeemTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 15057,
                  "src": "1634:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15046,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1633:19:53"
            },
            "returnParameters": {
              "id": 15051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15050,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15057,
                  "src": "1671:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15049,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1670:6:53"
            },
            "scope": 15383,
            "src": "1618:111:53",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15068,
              "nodeType": "Block",
              "src": "2146:62:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15065,
                        "name": "redeemAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15059,
                        "src": "2188:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15064,
                      "name": "redeemUnderlyingInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17189,
                      "src": "2163:24:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 15066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:38:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15063,
                  "id": 15067,
                  "nodeType": "Return",
                  "src": "2156:45:53"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemAmount The amount of underlying to redeem\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 15069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15059,
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15069,
                  "src": "2103:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15058,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2103:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2102:19:53"
            },
            "returnParameters": {
              "id": 15063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15062,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15069,
                  "src": "2140:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15061,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2139:6:53"
            },
            "scope": 15383,
            "src": "2077:131:53",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15080,
              "nodeType": "Block",
              "src": "2528:52:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15077,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15071,
                        "src": "2560:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15076,
                      "name": "borrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17561,
                      "src": "2545:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 15078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2545:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15075,
                  "id": 15079,
                  "nodeType": "Return",
                  "src": "2538:35:53"
                }
              ]
            },
            "documentation": "@notice Sender borrows assets from the protocol to their own address\n@param borrowAmount The amount of the underlying asset to borrow\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 15081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15071,
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15081,
                  "src": "2485:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15070,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2484:19:53"
            },
            "returnParameters": {
              "id": 15075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15074,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15081,
                  "src": "2522:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15073,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2521:6:53"
            },
            "scope": 15383,
            "src": "2469:111:53",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15092,
              "nodeType": "Block",
              "src": "2725:85:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15086,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "2770:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2770:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15085,
                          "name": "repayBorrowInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17826,
                          "src": "2750:19:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) returns (uint256)"
                          }
                        },
                        "id": 15088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2750:30:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77206661696c6564",
                        "id": 15089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2782:20:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        },
                        "value": "repayBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        }
                      ],
                      "id": 15084,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "2735:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2735:68:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15091,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:68:53"
                }
              ]
            },
            "documentation": "@notice Sender repays their own borrow\n@dev Reverts upon any failure",
            "id": 15093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2705:2:53"
            },
            "returnParameters": {
              "id": 15083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2725:0:53"
            },
            "scope": 15383,
            "src": "2685:125:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15107,
              "nodeType": "Block",
              "src": "3056:107:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15100,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15095,
                            "src": "3107:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15101,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "3117:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3117:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15099,
                          "name": "repayBorrowBehalfInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17866,
                          "src": "3081:25:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) returns (uint256)"
                          }
                        },
                        "id": 15103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3081:46:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77426568616c66206661696c6564",
                        "id": 15104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3129:26:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        },
                        "value": "repayBorrowBehalf failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        }
                      ],
                      "id": 15098,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "3066:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3066:90:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15106,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:90:53"
                }
              ]
            },
            "documentation": "@notice Sender repays a borrow belonging to borrower\n@dev Reverts upon any failure\n@param borrower the account with the debt being payed off",
            "id": 15108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrowBehalf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15095,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 15108,
                  "src": "3021:16:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3021:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3020:18:53"
            },
            "returnParameters": {
              "id": 15097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:0:53"
            },
            "scope": 15383,
            "src": "2994:169:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15125,
              "nodeType": "Block",
              "src": "3591:121:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15117,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15110,
                            "src": "3640:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15118,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "3650:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3650:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 15120,
                            "name": "cTokenCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15112,
                            "src": "3661:16:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CToken_$19106",
                              "typeString": "contract CToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_CToken_$19106",
                              "typeString": "contract CToken"
                            }
                          ],
                          "id": 15116,
                          "name": "liquidateBorrowInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18215,
                          "src": "3616:23:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_CToken_$19106_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256,contract CToken) returns (uint256)"
                          }
                        },
                        "id": 15121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3616:62:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6971756964617465426f72726f77206661696c6564",
                        "id": 15122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3680:24:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        },
                        "value": "liquidateBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        }
                      ],
                      "id": 15115,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "3601:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:104:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15124,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:104:53"
                }
              ]
            },
            "documentation": "@notice The sender liquidates the borrowers collateral.\n The collateral seized is transferred to the liquidator.\n@dev Reverts upon any failure\n@param borrower The borrower of this cToken to be liquidated\n@param cTokenCollateral The market in which to seize collateral from the borrower",
            "id": 15126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15110,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 15126,
                  "src": "3531:16:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3531:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15112,
                  "name": "cTokenCollateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 15126,
                  "src": "3549:23:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$19106",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15111,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19106,
                    "src": "3549:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$19106",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3530:43:53"
            },
            "returnParameters": {
              "id": 15114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3591:0:53"
            },
            "scope": 15383,
            "src": "3506:206:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15137,
              "nodeType": "Block",
              "src": "3807:71:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15131,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32817,
                              "src": "3845:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3845:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15130,
                          "name": "mintInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16834,
                          "src": "3832:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) returns (uint256)"
                          }
                        },
                        "id": 15133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3832:23:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 15134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3857:13:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 15129,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "3817:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 15135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:54:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15136,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:54:53"
                }
              ]
            },
            "documentation": "@notice Send Ether to CEther to mint",
            "id": 15138,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3787:2:53"
            },
            "returnParameters": {
              "id": 15128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3807:0:53"
            },
            "scope": 15383,
            "src": "3778:100:53",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15165,
              "nodeType": "Block",
              "src": "4190:174:53",
              "statements": [
                {
                  "assignments": [
                    15144,
                    15146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15144,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 15165,
                      "src": "4201:13:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MathError_$19113",
                        "typeString": "enum CarefulMath.MathError"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 15143,
                        "name": "MathError",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 19113,
                        "src": "4201:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MathError_$19113",
                          "typeString": "enum CarefulMath.MathError"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15146,
                      "name": "startingBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 15165,
                      "src": "4216:20:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15145,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4216:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15155,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 15149,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33037,
                              "src": "4256:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CEther_$15383",
                                "typeString": "contract CEther"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CEther_$15383",
                                "typeString": "contract CEther"
                              }
                            ],
                            "id": 15148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4248:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 15150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4248:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 15151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4248:21:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32817,
                          "src": "4271:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4271:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15147,
                      "name": "subUInt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19218,
                      "src": "4240:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_enum$_MathError_$19113_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (enum CarefulMath.MathError,uint256)"
                      }
                    },
                    "id": 15154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4240:41:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_MathError_$19113_$_t_uint256_$",
                      "typeString": "tuple(enum CarefulMath.MathError,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4200:81:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_MathError_$19113",
                          "typeString": "enum CarefulMath.MathError"
                        },
                        "id": 15160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15157,
                          "name": "err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15144,
                          "src": "4299:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$19113",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15158,
                            "name": "MathError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19113,
                            "src": "4306:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MathError_$19113_$",
                              "typeString": "type(enum CarefulMath.MathError)"
                            }
                          },
                          "id": 15159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4306:18:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$19113",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "src": "4299:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32820,
                      "src": "4291:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4291:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15162,
                  "nodeType": "ExpressionStatement",
                  "src": "4291:34:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15163,
                    "name": "startingBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15146,
                    "src": "4342:15:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15142,
                  "id": 15164,
                  "nodeType": "Return",
                  "src": "4335:22:53"
                }
              ]
            },
            "documentation": "@notice Gets balance of this contract in terms of Ether, before this message\n@dev This excludes the value of the current message, if any\n@return The quantity of Ether owned by this contract",
            "id": 15166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCashPrior",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4158:2:53"
            },
            "returnParameters": {
              "id": 15142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15141,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15166,
                  "src": "4184:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4184:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4183:6:53"
            },
            "scope": 15383,
            "src": "4137:227:53",
            "stateMutability": "view",
            "superFunction": 19078,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15194,
              "nodeType": "Block",
              "src": "4721:175:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32817,
                            "src": "4764:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4764:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15178,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15168,
                          "src": "4778:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4764:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 15180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4784:17:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 15175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "4756:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4756:46:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15182,
                  "nodeType": "ExpressionStatement",
                  "src": "4756:46:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32817,
                            "src": "4820:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4820:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15186,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15170,
                          "src": "4833:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4820:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 15188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4841:16:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 15183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "4812:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:46:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15190,
                  "nodeType": "ExpressionStatement",
                  "src": "4812:46:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 15191,
                      "name": "Error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21978,
                      "src": "4875:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                        "typeString": "type(enum TokenErrorReporter.Error)"
                      }
                    },
                    "id": 15192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NO_ERROR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4875:14:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "functionReturnParameters": 15174,
                  "id": 15193,
                  "nodeType": "Return",
                  "src": "4868:21:53"
                }
              ]
            },
            "documentation": "@notice Checks whether the requested transfer matches the `msg`\n@dev Does NOT do a transfer\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return Whether or not the transfer checks out",
            "id": 15195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15168,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 15195,
                  "src": "4664:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4664:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15170,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15195,
                  "src": "4678:11:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4678:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4663:27:53"
            },
            "returnParameters": {
              "id": 15174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15173,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15195,
                  "src": "4714:5:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$21978",
                    "typeString": "enum TokenErrorReporter.Error"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15172,
                    "name": "Error",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21978,
                    "src": "4714:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4713:7:53"
            },
            "scope": 15383,
            "src": "4639:257:53",
            "stateMutability": "view",
            "superFunction": 19087,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15223,
              "nodeType": "Block",
              "src": "5172:175:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32817,
                            "src": "5215:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5215:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15207,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15197,
                          "src": "5229:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5215:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 15209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5235:17:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 15204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "5207:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5207:46:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15211,
                  "nodeType": "ExpressionStatement",
                  "src": "5207:46:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32817,
                            "src": "5271:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5271:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15215,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15199,
                          "src": "5284:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5271:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 15217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5292:16:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 15212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "5263:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5263:46:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15219,
                  "nodeType": "ExpressionStatement",
                  "src": "5263:46:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 15220,
                      "name": "Error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21978,
                      "src": "5326:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                        "typeString": "type(enum TokenErrorReporter.Error)"
                      }
                    },
                    "id": 15221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NO_ERROR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5326:14:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "functionReturnParameters": 15203,
                  "id": 15222,
                  "nodeType": "Return",
                  "src": "5319:21:53"
                }
              ]
            },
            "documentation": "@notice Perform the actual transfer in, which is a no-op\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return Success",
            "id": 15224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15197,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 15224,
                  "src": "5120:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5120:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15199,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15224,
                  "src": "5134:11:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15198,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5134:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5119:27:53"
            },
            "returnParameters": {
              "id": 15203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15202,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15224,
                  "src": "5165:5:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$21978",
                    "typeString": "enum TokenErrorReporter.Error"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15201,
                    "name": "Error",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21978,
                    "src": "5165:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5164:7:53"
            },
            "scope": 15383,
            "src": "5098:249:53",
            "stateMutability": "nonpayable",
            "superFunction": 19096,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15242,
              "nodeType": "Block",
              "src": "5434:136:53",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15236,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15228,
                        "src": "5525:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15233,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15226,
                        "src": "5513:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 15235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5513:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:19:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15238,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:19:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 15239,
                      "name": "Error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21978,
                      "src": "5549:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                        "typeString": "type(enum TokenErrorReporter.Error)"
                      }
                    },
                    "id": 15240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NO_ERROR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5549:14:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "functionReturnParameters": 15232,
                  "id": 15241,
                  "nodeType": "Return",
                  "src": "5542:21:53"
                }
              ]
            },
            "documentation": null,
            "id": 15243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferOut",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15226,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 15243,
                  "src": "5376:18:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 15225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5376:15:53",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15228,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15243,
                  "src": "5396:11:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5396:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5375:33:53"
            },
            "returnParameters": {
              "id": 15232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15231,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15243,
                  "src": "5427:5:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$21978",
                    "typeString": "enum TokenErrorReporter.Error"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15230,
                    "name": "Error",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21978,
                    "src": "5427:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$21978",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5426:7:53"
            },
            "scope": 15383,
            "src": "5353:217:53",
            "stateMutability": "nonpayable",
            "superFunction": 19105,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15381,
              "nodeType": "Block",
              "src": "5651:618:53",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15250,
                      "name": "errCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15245,
                      "src": "5665:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15252,
                            "name": "Error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21978,
                            "src": "5681:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                              "typeString": "type(enum TokenErrorReporter.Error)"
                            }
                          },
                          "id": 15253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5681:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$21978",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Error_$21978",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        ],
                        "id": 15251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5676:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 15254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5676:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5665:31:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 15258,
                  "nodeType": "IfStatement",
                  "src": "5661:68:53",
                  "trueBody": {
                    "id": 15257,
                    "nodeType": "Block",
                    "src": "5698:31:53",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 15249,
                        "id": 15256,
                        "nodeType": "Return",
                        "src": "5712:7:53"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    15260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15260,
                      "name": "fullMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 15381,
                      "src": "5739:24:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 15259,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5739:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15270,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 15264,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15247,
                                "src": "5782:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 15263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5776:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 15265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5776:14:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 15266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5776:21:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 15267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5800:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "5776:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5766:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 15261,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5770:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 15269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5766:36:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5739:63:53"
                },
                {
                  "assignments": [
                    15272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15272,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 15381,
                      "src": "5812:6:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15271,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5812:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15273,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5812:6:53"
                },
                {
                  "body": {
                    "id": 15297,
                    "nodeType": "Block",
                    "src": "5873:59:53",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 15295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 15287,
                              "name": "fullMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15260,
                              "src": "5887:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 15289,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 15288,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15272,
                              "src": "5899:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5887:14:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 15291,
                                  "name": "message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15247,
                                  "src": "5910:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 15290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5904:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 15292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5904:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 15294,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 15293,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15272,
                              "src": "5919:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5904:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "5887:34:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 15296,
                        "nodeType": "ExpressionStatement",
                        "src": "5887:34:53"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15278,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15272,
                      "src": "5841:1:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15280,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15247,
                            "src": "5851:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 15279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5845:5:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 15281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5845:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5845:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5841:25:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15298,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 15274,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15272,
                        "src": "5834:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 15275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5838:1:53",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5834:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15277,
                    "nodeType": "ExpressionStatement",
                    "src": "5834:5:53"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5868:3:53",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 15284,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15272,
                        "src": "5868:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15286,
                    "nodeType": "ExpressionStatement",
                    "src": "5868:3:53"
                  },
                  "nodeType": "ForStatement",
                  "src": "5829:103:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15299,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "5942:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15303,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15300,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "5954:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 15301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5956:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5954:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5942:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3332",
                              "id": 15306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5972:2:53",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              }
                            ],
                            "id": 15305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5966:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5966:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5961:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5961:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "5942:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15310,
                  "nodeType": "ExpressionStatement",
                  "src": "5942:34:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15311,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "5986:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15315,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15312,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "5998:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 15313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6000:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5998:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5986:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3430",
                              "id": 15318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6016:2:53",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              }
                            ],
                            "id": 15317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6010:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6010:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6005:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6005:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "5986:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15322,
                  "nodeType": "ExpressionStatement",
                  "src": "5986:34:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15323,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "6030:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15327,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15324,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "6042:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 15325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6044:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6042:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6030:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 15335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 15330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6060:2:53",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 15333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 15331,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15245,
                                      "src": "6067:7:53",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 15332,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6077:2:53",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6067:12:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 15334,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6065:16:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6060:21:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 15329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6054:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6054:28:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6049:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6049:34:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6030:53:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15339,
                  "nodeType": "ExpressionStatement",
                  "src": "6030:53:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15340,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "6093:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15344,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15341,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "6105:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 15342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6107:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "6105:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6093:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 15352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 15347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6123:2:53",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 15350,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 15348,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15245,
                                      "src": "6130:7:53",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "%",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 15349,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6140:2:53",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6130:12:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 15351,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6128:16:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6123:21:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 15346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6117:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6117:28:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6112:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6112:34:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6093:53:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15356,
                  "nodeType": "ExpressionStatement",
                  "src": "6093:53:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15357,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15260,
                        "src": "6156:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 15361,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15358,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15272,
                          "src": "6168:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 15359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6170:1:53",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6168:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6156:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3431",
                              "id": 15364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6186:2:53",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              },
                              "value": "41"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              }
                            ],
                            "id": 15363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6180:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 15365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6180:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6175:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 15366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6175:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6156:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 15368,
                  "nodeType": "ExpressionStatement",
                  "src": "6156:34:53"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15370,
                          "name": "errCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15245,
                          "src": "6209:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 15372,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21978,
                                "src": "6225:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$21978_$",
                                  "typeString": "type(enum TokenErrorReporter.Error)"
                                }
                              },
                              "id": 15373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6225:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$21978",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$21978",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            ],
                            "id": 15371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6220:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 15374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6220:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6209:31:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15377,
                            "name": "fullMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15260,
                            "src": "6249:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 15376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6242:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 15378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6242:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 15369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32820,
                        32821
                      ],
                      "referencedDeclaration": 32821,
                      "src": "6201:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6201:61:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15380,
                  "nodeType": "ExpressionStatement",
                  "src": "6201:61:53"
                }
              ]
            },
            "documentation": null,
            "id": 15382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requireNoError",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15245,
                  "name": "errCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 15382,
                  "src": "5600:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15244,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5600:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15247,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 15382,
                  "src": "5614:21:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5614:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5599:37:53"
            },
            "returnParameters": {
              "id": 15249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5651:0:53"
            },
            "scope": 15383,
            "src": "5576:693:53",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 15384,
        "src": "150:6121:53"
      }
    ],
    "src": "0:6272:53"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-31T19:52:06.666Z",
  "devdoc": {
    "author": "Compound",
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_reduceReserves(uint256)": {
        "params": {
          "reduceAmount": "Amount of reduction to reserves"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setComptroller(address)": {
        "details": "Admin function to set a new comptroller",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setInterestRateModel(address)": {
        "details": "Admin function to accrue interest and update the interest rate model",
        "params": {
          "newInterestRateModel": "the new interest rate model to use"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)      * TODO: Should we add a second arg to verify, like a checksum of `newAdmin` address?"
      },
      "_setReserveFactor(uint256)": {
        "details": "Admin function to accrue interest and set a new reserve factor",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "accrueInterest()": {
        "details": "This calculates interest accrued from the last checkpointed block     up to the current block and writes new checkpoint to storage."
      },
      "allowance(address,address)": {
        "params": {
          "owner": "The address of the account which owns the tokens to be spent",
          "spender": "The address of the account which may transfer tokens"
        },
        "return": "The number of tokens allowed to be spent (-1 means infinite)"
      },
      "approve(address,uint256)": {
        "details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
        "params": {
          "amount": "The number of tokens that are approved (-1 means infinite)",
          "spender": "The address of the account which may transfer tokens"
        },
        "return": "Whether or not the approval succeeded"
      },
      "balanceOf(address)": {
        "params": {
          "owner": "The address of the account to query"
        },
        "return": "The number of tokens owned by `owner`"
      },
      "balanceOfUnderlying(address)": {
        "details": "This also accrues interest in a transaction",
        "params": {
          "owner": "The address of the account to query"
        },
        "return": "The amount of underlying owned by `owner`"
      },
      "borrow(uint256)": {
        "params": {
          "borrowAmount": "The amount of the underlying asset to borrow"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "borrowBalanceCurrent(address)": {
        "params": {
          "account": "The address whose balance should be calculated after updating borrowIndex"
        },
        "return": "The calculated balance"
      },
      "borrowBalanceStored(address)": {
        "params": {
          "account": "The address whose balance should be calculated"
        },
        "return": "The calculated balance"
      },
      "borrowRatePerBlock()": {
        "return": "The borrow interest rate per block, scaled by 1e18"
      },
      "constructor": {
        "params": {
          "comptroller_": "The address of the Comptroller",
          "decimals_": "ERC-20 decimal precision of this token",
          "initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
          "interestRateModel_": "The address of the interest rate model",
          "name_": "ERC-20 name of this token",
          "symbol_": "ERC-20 symbol of this token"
        }
      },
      "exchangeRateCurrent()": {
        "return": "Calculated exchange rate scaled by 1e18"
      },
      "exchangeRateStored()": {
        "details": "This function does not accrue interest before calculating the exchange rate",
        "return": "Calculated exchange rate scaled by 1e18"
      },
      "getAccountSnapshot(address)": {
        "details": "This is used by comptroller to more efficiently perform liquidity checks.",
        "params": {
          "account": "Address of the account to snapshot"
        },
        "return": "(possible error, token balance, borrow balance, exchange rate mantissa)"
      },
      "getCash()": {
        "return": "The quantity of underlying asset owned by this contract"
      },
      "liquidateBorrow(address,address)": {
        "details": "Reverts upon any failure",
        "params": {
          "borrower": "The borrower of this cToken to be liquidated",
          "cTokenCollateral": "The market in which to seize collateral from the borrower"
        }
      },
      "mint()": {
        "details": "Reverts upon any failure"
      },
      "redeem(uint256)": {
        "details": "Accrues interest whether or not the operation succeeds, unless reverted",
        "params": {
          "redeemTokens": "The number of cTokens to redeem into underlying"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "redeemUnderlying(uint256)": {
        "details": "Accrues interest whether or not the operation succeeds, unless reverted",
        "params": {
          "redeemAmount": "The amount of underlying to redeem"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "repayBorrow()": {
        "details": "Reverts upon any failure"
      },
      "repayBorrowBehalf(address)": {
        "details": "Reverts upon any failure",
        "params": {
          "borrower": "the account with the debt being payed off"
        }
      },
      "seize(address,address,uint256)": {
        "details": "Will fail unless called by another cToken during the process of liquidation. Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.",
        "params": {
          "borrower": "The account having collateral seized",
          "liquidator": "The account receiving seized collateral",
          "seizeTokens": "The number of cTokens to seize"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "supplyRatePerBlock()": {
        "return": "The supply interest rate per block, scaled by 1e18"
      },
      "totalBorrowsCurrent()": {
        "return": "The total borrows with interest"
      },
      "transfer(address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account"
        },
        "return": "Whether or not the transfer succeeded"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account",
          "src": "The address of the source account"
        },
        "return": "Whether or not the transfer succeeded"
      }
    },
    "title": "Compound's CEther Contract"
  },
  "userdoc": {
    "methods": {
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_reduceReserves(uint256)": {
        "notice": "Accrues interest and reduces reserves by transferring to admin"
      },
      "_setComptroller(address)": {
        "notice": "Sets a new comptroller for the market"
      },
      "_setInterestRateModel(address)": {
        "notice": "accrues interest and updates the interest rate model using _setInterestRateModelFresh"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setReserveFactor(uint256)": {
        "notice": "accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh"
      },
      "accrueInterest()": {
        "notice": "Applies accrued interest to total borrows and reserves."
      },
      "allowance(address,address)": {
        "notice": "Get the current allowance from `owner` for `spender`"
      },
      "approve(address,uint256)": {
        "notice": "Approve `spender` to transfer up to `amount` from `src`"
      },
      "balanceOf(address)": {
        "notice": "Get the token balance of the `owner`"
      },
      "balanceOfUnderlying(address)": {
        "notice": "Get the underlying balance of the `owner`"
      },
      "borrow(uint256)": {
        "notice": "Sender borrows assets from the protocol to their own address"
      },
      "borrowBalanceCurrent(address)": {
        "notice": "Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex"
      },
      "borrowBalanceStored(address)": {
        "notice": "Return the borrow balance of account based on stored data"
      },
      "borrowRatePerBlock()": {
        "notice": "Returns the current per-block borrow interest rate for this cToken"
      },
      "constructor": "Construct a new CEther money market",
      "exchangeRateCurrent()": {
        "notice": "Accrue interest then return the up-to-date exchange rate"
      },
      "exchangeRateStored()": {
        "notice": "Calculates the exchange rate from the underlying to the CToken"
      },
      "getAccountSnapshot(address)": {
        "notice": "Get a snapshot of the account's balances, and the cached exchange rate"
      },
      "getCash()": {
        "notice": "Get cash balance of this cToken in the underlying asset"
      },
      "liquidateBorrow(address,address)": {
        "notice": "The sender liquidates the borrowers collateral. The collateral seized is transferred to the liquidator."
      },
      "mint()": {
        "notice": "Sender supplies assets into the market and receives cTokens in exchange"
      },
      "redeem(uint256)": {
        "notice": "Sender redeems cTokens in exchange for the underlying asset"
      },
      "redeemUnderlying(uint256)": {
        "notice": "Sender redeems cTokens in exchange for a specified amount of underlying asset"
      },
      "repayBorrow()": {
        "notice": "Sender repays their own borrow"
      },
      "repayBorrowBehalf(address)": {
        "notice": "Sender repays a borrow belonging to borrower"
      },
      "seize(address,address,uint256)": {
        "notice": "Transfers collateral tokens (this market) to the liquidator."
      },
      "supplyRatePerBlock()": {
        "notice": "Returns the current per-block supply interest rate for this cToken"
      },
      "totalBorrowsCurrent()": {
        "notice": "Returns the current total borrows plus accrued interest"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer `amount` tokens from `src` to `dst`"
      }
    },
    "notice": "CToken which wraps Ether"
  }
}