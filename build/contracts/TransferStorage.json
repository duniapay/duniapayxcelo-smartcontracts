{
  "contractName": "TransferStorage",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract BaseWallet",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "contract BaseWallet",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "getWhitelist",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"contract BaseWallet\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getWhitelist\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract BaseWallet\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Julien Niset - <julien@argent.im>\",\"details\":\"Contract storing the state of wallets related to transfers (limit and whitelist). The contract only defines basic setters and getters with no logic. Only modules authorised for a wallet can modify its state.\",\"methods\":{\"getWhitelist(address,address)\":{\"details\":\"Gets the whitelist state of an account for a wallet.\",\"params\":{\"_target\":\"The account.\",\"_wallet\":\"The target wallet.\"},\"return\":\"the epoch time at which an account strats to be whitelisted, or zero if the account is not whitelisted.\"},\"setWhitelist(address,address,uint256)\":{\"details\":\"Lets an authorised module add or remove an account from the whitelist of a wallet.\",\"params\":{\"_target\":\"The account to add/remove.\",\"_value\":\"True for addition, false for revokation.\",\"_wallet\":\"The target wallet.\"}}},\"title\":\"TransferStorage\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/storage/TransferStorage.sol\":\"TransferStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/interfaces/Module.sol\":{\"keccak256\":\"0x25555ee2388fbfb9a86f9867e585f466d4eb3f2019e97ecc57d7086b0e44ab93\",\"urls\":[\"bzz-raw://65c0fc38125d27a67fd259e0161e88bf896079f74588329f31a47a9a5c8a1b07\",\"dweb:/ipfs/QmZvNKyYQtV9vTw5CymgybZx9kafFfVnAqBXY2b5V4nFX8\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/storage/Storage.sol\":{\"keccak256\":\"0x1bedbcbaba5d6c522ecf0e5e5116a44e68cd67f33f15697118362ec3531bd163\",\"urls\":[\"bzz-raw://856c0f1f76a30155a522037dc6617b9994de88396e653b0ad1f6a4e4d213be32\",\"dweb:/ipfs/QmaZ36ZZaXpXhKQVFYdfYhZPk2VuDoaaaqkYbsfF3J55nw\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/storage/TransferStorage.sol\":{\"keccak256\":\"0xc7968a9f383cd41a1daf52f9c525eb1f25b9cccf70e41e9b3292e86422fcfbca\",\"urls\":[\"bzz-raw://7daca35427002785556c14feb16285def86840fb0809c1a96a068e11c964e538\",\"dweb:/ipfs/QmU8ev85p8QwnwVcY5fBSfbj6XhrgVUDfkMyY3HSCtHA2H\"]},\"/Users/name/dev/argent-contracts-release-1.5.0/contracts/wallet/BaseWallet.sol\":{\"keccak256\":\"0xf57ed4d9c894cf3cb083981471b558a91e50871148c02ee58047f7e22852e8ee\",\"urls\":[\"bzz-raw://bd5e2ef0f78cbcbee02a129e880cb207fc905b40bd43f0043a53d3a72674e27b\",\"dweb:/ipfs/QmSTPAUJJj2wpbFNW4WgDnEn5YxYRymNriXyvQWtazPrKB\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103a4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806313f4a0ea1461003b57806380bfbe68146100b3575b600080fd5b61009d6004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610121565b6040518082815260200191505060405180910390f35b61011f600480360360608110156100c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506101a7565b005b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b828073ffffffffffffffffffffffffffffffffffffffff1663d6eb1bbf336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561022557600080fd5b505afa158015610239573d6000803e3d6000fd5b505050506040513d602081101561024f57600080fd5b81019080805190602001909291905050506102b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603481526020018061033c6034913960400191505060405180910390fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505056fe54533a206d75737420626520616e20617574686f72697a6564206d6f64756c6520746f2063616c6c2074686973206d6574686f64a265627a7a723158200709e7dbbf6a601e8759090e0c465abb87c794385d44edcad3e0b0a8097b3d6364736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806313f4a0ea1461003b57806380bfbe68146100b3575b600080fd5b61009d6004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610121565b6040518082815260200191505060405180910390f35b61011f600480360360608110156100c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506101a7565b005b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b828073ffffffffffffffffffffffffffffffffffffffff1663d6eb1bbf336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561022557600080fd5b505afa158015610239573d6000803e3d6000fd5b505050506040513d602081101561024f57600080fd5b81019080805190602001909291905050506102b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603481526020018061033c6034913960400191505060405180910390fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505056fe54533a206d75737420626520616e20617574686f72697a6564206d6f64756c6520746f2063616c6c2074686973206d6574686f64a265627a7a723158200709e7dbbf6a601e8759090e0c465abb87c794385d44edcad3e0b0a8097b3d6364736f6c63430005100032",
  "sourceMap": "1090:1081:37:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1090:1081:37;;;;;;;",
  "deployedSourceMap": "1090:1081:37:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1090:1081:37;;;;;;;;;;;;;;;;;;;;;;;;2018:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2018:151:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1570:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1570:166:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2018:151;2100:7;2126:9;:27;2144:7;2126:27;;;;;;;;;;;;;;;:36;2154:7;2126:36;;;;;;;;;;;;;;;;2119:43;;2018:151;;;;:::o;1570:166::-;1665:7;1047::36;:18;;;1066:10;1047:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1047:30:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1047:30:36;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1047:30:36;;;;;;;;;;;;;;;;1039:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1723:6:37;1684:9;:27;1702:7;1684:27;;;;;;;;;;;;;;;:36;1712:7;1684:36;;;;;;;;;;;;;;;:45;;;;1570:166;;;;:::o",
  "source": "// Copyright (C) 2018  Argent Labs Ltd. <https://argent.xyz>\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.5.4;\nimport \"../wallet/BaseWallet.sol\";\nimport \"./Storage.sol\";\n\n/**\n * @title TransferStorage\n * @dev Contract storing the state of wallets related to transfers (limit and whitelist).\n * The contract only defines basic setters and getters with no logic. Only modules authorised\n * for a wallet can modify its state.\n * @author Julien Niset - <julien@argent.im>\n */\ncontract TransferStorage is Storage {\n\n    // wallet specific storage\n    mapping (address => mapping (address => uint256)) internal whitelist;\n\n    // *************** External Functions ********************* //\n\n    /**\n     * @dev Lets an authorised module add or remove an account from the whitelist of a wallet.\n     * @param _wallet The target wallet.\n     * @param _target The account to add/remove.\n     * @param _value True for addition, false for revokation.\n     */\n    function setWhitelist(BaseWallet _wallet, address _target, uint256 _value) external onlyModule(_wallet) {\n        whitelist[address(_wallet)][_target] = _value;\n    }\n\n    /**\n     * @dev Gets the whitelist state of an account for a wallet.\n     * @param _wallet The target wallet.\n     * @param _target The account.\n     * @return the epoch time at which an account strats to be whitelisted, or zero if the account is not whitelisted.\n     */\n    function getWhitelist(BaseWallet _wallet, address _target) external view returns (uint256) {\n        return whitelist[address(_wallet)][_target];\n    }\n}",
  "sourcePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/storage/TransferStorage.sol",
  "ast": {
    "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/storage/TransferStorage.sol",
    "exportedSymbols": {
      "TransferStorage": [
        12071
      ]
    },
    "id": 12072,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12019,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "705:23:37"
      },
      {
        "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/wallet/BaseWallet.sol",
        "file": "../wallet/BaseWallet.sol",
        "id": 12020,
        "nodeType": "ImportDirective",
        "scope": 12072,
        "sourceUnit": 27734,
        "src": "729:34:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/storage/Storage.sol",
        "file": "./Storage.sol",
        "id": 12021,
        "nodeType": "ImportDirective",
        "scope": 12072,
        "sourceUnit": 12018,
        "src": "764:23:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12022,
              "name": "Storage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12017,
              "src": "1118:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storage_$12017",
                "typeString": "contract Storage"
              }
            },
            "id": 12023,
            "nodeType": "InheritanceSpecifier",
            "src": "1118:7:37"
          }
        ],
        "contractDependencies": [
          12017
        ],
        "contractKind": "contract",
        "documentation": "@title TransferStorage\n@dev Contract storing the state of wallets related to transfers (limit and whitelist).\nThe contract only defines basic setters and getters with no logic. Only modules authorised\nfor a wallet can modify its state.\n@author Julien Niset - <julien@argent.im>",
        "fullyImplemented": true,
        "id": 12071,
        "linearizedBaseContracts": [
          12071,
          12017
        ],
        "name": "TransferStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12029,
            "name": "whitelist",
            "nodeType": "VariableDeclaration",
            "scope": 12071,
            "src": "1164:68:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 12028,
              "keyType": {
                "id": 12024,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1173:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1164:49:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 12027,
                "keyType": {
                  "id": 12025,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1184:28:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 12026,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1204:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12051,
              "nodeType": "Block",
              "src": "1674:62:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 12041,
                          "name": "whitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12029,
                          "src": "1684:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 12046,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12043,
                              "name": "_wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12031,
                              "src": "1702:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BaseWallet_$27733",
                                "typeString": "contract BaseWallet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BaseWallet_$27733",
                                "typeString": "contract BaseWallet"
                              }
                            ],
                            "id": 12042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1694:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 12044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1694:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1684:27:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12047,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12045,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12033,
                        "src": "1712:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1684:36:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12048,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12035,
                      "src": "1723:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1684:45:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12050,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:45:37"
                }
              ]
            },
            "documentation": "@dev Lets an authorised module add or remove an account from the whitelist of a wallet.\n@param _wallet The target wallet.\n@param _target The account to add/remove.\n@param _value True for addition, false for revokation.",
            "id": 12052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12038,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12031,
                    "src": "1665:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseWallet_$27733",
                      "typeString": "contract BaseWallet"
                    }
                  }
                ],
                "id": 12039,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12037,
                  "name": "onlyModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12016,
                  "src": "1654:10:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_BaseWallet_$27733_$",
                    "typeString": "modifier (contract BaseWallet)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1654:19:37"
              }
            ],
            "name": "setWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12031,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "1592:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseWallet_$27733",
                    "typeString": "contract BaseWallet"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12030,
                    "name": "BaseWallet",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27733,
                    "src": "1592:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseWallet_$27733",
                      "typeString": "contract BaseWallet"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12033,
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "1612:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12035,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "1629:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1591:53:37"
            },
            "returnParameters": {
              "id": 12040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1674:0:37"
            },
            "scope": 12071,
            "src": "1570:166:37",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12069,
              "nodeType": "Block",
              "src": "2109:60:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12061,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12029,
                        "src": "2126:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 12065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12063,
                            "name": "_wallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12054,
                            "src": "2144:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseWallet_$27733",
                              "typeString": "contract BaseWallet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseWallet_$27733",
                              "typeString": "contract BaseWallet"
                            }
                          ],
                          "id": 12062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2136:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 12064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2136:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2126:27:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 12067,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12066,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12056,
                      "src": "2154:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2126:36:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12060,
                  "id": 12068,
                  "nodeType": "Return",
                  "src": "2119:43:37"
                }
              ]
            },
            "documentation": "@dev Gets the whitelist state of an account for a wallet.\n@param _wallet The target wallet.\n@param _target The account.\n@return the epoch time at which an account strats to be whitelisted, or zero if the account is not whitelisted.",
            "id": 12070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12054,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 12070,
                  "src": "2040:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseWallet_$27733",
                    "typeString": "contract BaseWallet"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12053,
                    "name": "BaseWallet",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27733,
                    "src": "2040:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseWallet_$27733",
                      "typeString": "contract BaseWallet"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12056,
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 12070,
                  "src": "2060:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:37:37"
            },
            "returnParameters": {
              "id": 12060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12059,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12070,
                  "src": "2100:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2099:9:37"
            },
            "scope": 12071,
            "src": "2018:151:37",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 12072,
        "src": "1090:1081:37"
      }
    ],
    "src": "705:1466:37"
  },
  "legacyAST": {
    "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/storage/TransferStorage.sol",
    "exportedSymbols": {
      "TransferStorage": [
        12071
      ]
    },
    "id": 12072,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12019,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "705:23:37"
      },
      {
        "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/wallet/BaseWallet.sol",
        "file": "../wallet/BaseWallet.sol",
        "id": 12020,
        "nodeType": "ImportDirective",
        "scope": 12072,
        "sourceUnit": 27734,
        "src": "729:34:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/name/dev/argent-contracts-release-1.5.0/contracts/storage/Storage.sol",
        "file": "./Storage.sol",
        "id": 12021,
        "nodeType": "ImportDirective",
        "scope": 12072,
        "sourceUnit": 12018,
        "src": "764:23:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12022,
              "name": "Storage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12017,
              "src": "1118:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storage_$12017",
                "typeString": "contract Storage"
              }
            },
            "id": 12023,
            "nodeType": "InheritanceSpecifier",
            "src": "1118:7:37"
          }
        ],
        "contractDependencies": [
          12017
        ],
        "contractKind": "contract",
        "documentation": "@title TransferStorage\n@dev Contract storing the state of wallets related to transfers (limit and whitelist).\nThe contract only defines basic setters and getters with no logic. Only modules authorised\nfor a wallet can modify its state.\n@author Julien Niset - <julien@argent.im>",
        "fullyImplemented": true,
        "id": 12071,
        "linearizedBaseContracts": [
          12071,
          12017
        ],
        "name": "TransferStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12029,
            "name": "whitelist",
            "nodeType": "VariableDeclaration",
            "scope": 12071,
            "src": "1164:68:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 12028,
              "keyType": {
                "id": 12024,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1173:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1164:49:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 12027,
                "keyType": {
                  "id": 12025,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1184:28:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 12026,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1204:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12051,
              "nodeType": "Block",
              "src": "1674:62:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 12041,
                          "name": "whitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12029,
                          "src": "1684:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 12046,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12043,
                              "name": "_wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12031,
                              "src": "1702:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BaseWallet_$27733",
                                "typeString": "contract BaseWallet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BaseWallet_$27733",
                                "typeString": "contract BaseWallet"
                              }
                            ],
                            "id": 12042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1694:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 12044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1694:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1684:27:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12047,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12045,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12033,
                        "src": "1712:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1684:36:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12048,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12035,
                      "src": "1723:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1684:45:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12050,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:45:37"
                }
              ]
            },
            "documentation": "@dev Lets an authorised module add or remove an account from the whitelist of a wallet.\n@param _wallet The target wallet.\n@param _target The account to add/remove.\n@param _value True for addition, false for revokation.",
            "id": 12052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12038,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12031,
                    "src": "1665:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseWallet_$27733",
                      "typeString": "contract BaseWallet"
                    }
                  }
                ],
                "id": 12039,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12037,
                  "name": "onlyModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12016,
                  "src": "1654:10:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_BaseWallet_$27733_$",
                    "typeString": "modifier (contract BaseWallet)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1654:19:37"
              }
            ],
            "name": "setWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12031,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "1592:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseWallet_$27733",
                    "typeString": "contract BaseWallet"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12030,
                    "name": "BaseWallet",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27733,
                    "src": "1592:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseWallet_$27733",
                      "typeString": "contract BaseWallet"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12033,
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "1612:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12035,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "1629:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1591:53:37"
            },
            "returnParameters": {
              "id": 12040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1674:0:37"
            },
            "scope": 12071,
            "src": "1570:166:37",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12069,
              "nodeType": "Block",
              "src": "2109:60:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12061,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12029,
                        "src": "2126:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 12065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12063,
                            "name": "_wallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12054,
                            "src": "2144:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseWallet_$27733",
                              "typeString": "contract BaseWallet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseWallet_$27733",
                              "typeString": "contract BaseWallet"
                            }
                          ],
                          "id": 12062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2136:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 12064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2136:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2126:27:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 12067,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12066,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12056,
                      "src": "2154:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2126:36:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12060,
                  "id": 12068,
                  "nodeType": "Return",
                  "src": "2119:43:37"
                }
              ]
            },
            "documentation": "@dev Gets the whitelist state of an account for a wallet.\n@param _wallet The target wallet.\n@param _target The account.\n@return the epoch time at which an account strats to be whitelisted, or zero if the account is not whitelisted.",
            "id": 12070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12054,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 12070,
                  "src": "2040:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseWallet_$27733",
                    "typeString": "contract BaseWallet"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12053,
                    "name": "BaseWallet",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27733,
                    "src": "2040:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseWallet_$27733",
                      "typeString": "contract BaseWallet"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12056,
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 12070,
                  "src": "2060:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:37:37"
            },
            "returnParameters": {
              "id": 12060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12059,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12070,
                  "src": "2100:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2099:9:37"
            },
            "scope": 12071,
            "src": "2018:151:37",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 12072,
        "src": "1090:1081:37"
      }
    ],
    "src": "705:1466:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-31T19:52:06.594Z",
  "devdoc": {
    "author": "Julien Niset - <julien@argent.im>",
    "details": "Contract storing the state of wallets related to transfers (limit and whitelist). The contract only defines basic setters and getters with no logic. Only modules authorised for a wallet can modify its state.",
    "methods": {
      "getWhitelist(address,address)": {
        "details": "Gets the whitelist state of an account for a wallet.",
        "params": {
          "_target": "The account.",
          "_wallet": "The target wallet."
        },
        "return": "the epoch time at which an account strats to be whitelisted, or zero if the account is not whitelisted."
      },
      "setWhitelist(address,address,uint256)": {
        "details": "Lets an authorised module add or remove an account from the whitelist of a wallet.",
        "params": {
          "_target": "The account to add/remove.",
          "_value": "True for addition, false for revokation.",
          "_wallet": "The target wallet."
        }
      }
    },
    "title": "TransferStorage"
  },
  "userdoc": {
    "methods": {}
  }
}