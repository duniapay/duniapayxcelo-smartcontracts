import DeployedContractWrapper from './deployed-contract-wrapper';
import { CompiledContract, EtherlimeWallet } from '../types/types';
import { Wallet, Contract, providers } from 'ethers';
declare class EtherlimeGanacheWrapper extends DeployedContractWrapper {
    /**
     *
     * Object representing deployed contract allowing user to interact with deployed contracts
     *
     * @param {*} contract The deployed contract descriptor
     * @param {*} contractAddress The address of the deployed contract
     * @param {*} signer The signer that has deployed this contract
     * @param {*} provider ethers provider
     */
    private instances;
    private instancesMap;
    constructor(contract: CompiledContract, contractAddress: string, signer?: Wallet, provider?: providers.JsonRpcProvider);
    from(addressOrSignerOrIndex: string | Wallet & EtherlimeWallet | number): Contract;
    verboseWaitForTransaction(transaction: providers.TransactionResponse, transactionLabel: string): Promise<providers.TransactionReceipt>;
}
export default EtherlimeGanacheWrapper;
