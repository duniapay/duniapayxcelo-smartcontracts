import JSONRPCDeployer from './../jsonrpc-deployer/jsonrpc-private-key-deployer';
import EtherlimeGanacheWrapper from './../../deployed-contract/etherlime-ganache-wrapper';
import { providers } from 'ethers';
import { TxParams, CompiledContract } from '../../types/types';
declare class EtherlimeGanacheDeployer extends JSONRPCDeployer {
    /**
     *
     * Instantiates new deployer based on the GanacheCli Provider; If no privateKey and nodeUrl are specified, the deployer will be instantiated with the default values from cli-commands/ganache/setup.json
     *
     * @param {*} privateKey the private key for the deployer wallet/signer instance
     * @param {*} port port number of the network to deploy on. This is the port number that is given to the class
     * @param {*} defaultOverrides [Optional] default deployment overrides
     */
    constructor(privateKey?: string, port?: number, defaultOverrides?: TxParams);
    setPort(port: number): void;
    static _validatePortInput(port: number): void;
    toString(): string;
    protected _waitForDeployTransaction(transaction: providers.TransactionResponse): Promise<providers.TransactionReceipt>;
    protected _generateDeploymentResult(contract: CompiledContract, transaction: providers.TransactionResponse, transactionReceipt: providers.TransactionReceipt): Promise<EtherlimeGanacheWrapper>;
    wrapDeployedContract(contract: CompiledContract, contractAddress: string): EtherlimeGanacheWrapper;
}
export default EtherlimeGanacheDeployer;
